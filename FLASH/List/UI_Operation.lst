###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        18/Feb/2016  00:48:07
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\freescale_racing\framework2016\source\UI_Operation.c
#    Command line =  
#        E:\freescale_racing\framework2016\source\UI_Operation.c -lCN
#        E:\freescale_racing\framework2016\FLASH\List\ -lB
#        E:\freescale_racing\framework2016\FLASH\List\ -o
#        E:\freescale_racing\framework2016\FLASH\Obj\ --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\freescale_racing\framework2016\source\ -I
#        E:\freescale_racing\framework2016\common\ -I
#        E:\freescale_racing\framework2016\LPLD\ -I
#        E:\freescale_racing\framework2016\LPLD\HW\ -I
#        E:\freescale_racing\framework2016\LPLD\DEV\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        E:\freescale_racing\framework2016\FLASH\List\UI_Operation.lst
#    Object file  =  E:\freescale_racing\framework2016\FLASH\Obj\UI_Operation.o
#
###############################################################################

E:\freescale_racing\framework2016\source\UI_Operation.c
      1          /*
      2          Arthor : Qian Qiyang (KisaragiAyanoo@twitter)
      3          Date : 2015/12/04
      4          License : MIT
      5          */
      6          
      7          
      8          #include "includes.h"
      9          
     10          
     11          
     12          // ====== Settings ======
     13          
     14            // Sensibility of operation
     15            // smaller, more sensitive
     16          #define SENSIBILITY 8
     17          
     18            // Strength to debounce
     19            // depends on period of UI Refreshing Loop
     20          #define DEBOUNCE_CNT 6 
     21          
     22          
     23          
     24          
     25          // ====== Variables ======
     26          
     27          // ---- Global ----

   \                                 In section .bss, align 2
     28          u16 ui_operation_shift, ui_operation_cnt;
   \                     ui_operation_shift:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     ui_operation_cnt:
   \   00000000                      DS8 2
     29          
     30          // ---- Local ----

   \                                 In section .bss, align 1
     31          u8 Key3_down,Key1_down,Key2_down;   // flag : state of pushed down
   \                     Key3_down:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key1_down:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key2_down:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     32          u8 Key3_rise,Key1_rise,Key2_rise;   // flag : transient state of rising
   \                     Key3_rise:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key1_rise:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key2_rise:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     33          u8 Key3_cnt,Key1_cnt,Key2_cnt;      // counter to debounce
   \                     Key3_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key1_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key2_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     34          u8 Key1_risemask,Key2_risemask,Key3_risemask;   // flag to mask Rise_Func after DownSpin_Func
   \                     Key1_risemask:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key2_risemask:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Key3_risemask:
   \   00000000                      DS8 1
     35          
     36          
     37          
     38          // ====== Local Func Declaration ====
     39          
     40            // --- API ---
     41          void Key1_Rise_Func();
     42          void Key2_Rise_Func();
     43          void Key3_Rise_Func();
     44          void Key1_Downspin_Func();
     45          void Key2_Downspin_Func();
     46          void Key3_Downspin_Func();
     47          void Spin_Func();
     48          
     49            // --- Baisc Drivers ---
     50          void Key1_Read();
     51          void Key2_Read();
     52          void Key3_Read();
     53          
     54          
     55          
     56          
     57          // ====== APIs =======
     58          // write your codes in certain Func you wanna realize.
     59          
     60          
     61            // --- Keyn_Rise_Func ---
     62            // triggered when Keyn rises after push with no spin of tacho.
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void Key1_Rise_Func(){
   \                     Key1_Rise_Func: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     65            Bell_Request(3);
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x.... 0x....      BL       Bell_Request
     66          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
     67          

   \                                 In section .text, align 2, keep-with-next
     68          void Key2_Rise_Func(){     
   \                     Key2_Rise_Func: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     69            Bell_Request(3);      
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x.... 0x....      BL       Bell_Request
     70            
     71            /*item_renew_cnt = 8;
     72            data_renew_cnt = 8;
     73            if(menu==1)
     74              menu=10+curse;
     75            else if(menu>=10 && menu<=20 && selected==0)
     76              selected=1;
     77            else if(menu>=11&&menu<=14 && selected==1){
     78              selected=0;
     79              Flash_Write(0);
     80            }
     81            else if(menu==10 && selected==1)
     82              selected=0;
     83            
     84            curse_display();*/
     85          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
     86          

   \                                 In section .text, align 2, keep-with-next
     87          void Key3_Rise_Func(){   
   \                     Key3_Rise_Func: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     88            Bell_Request(3); 
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x.... 0x....      BL       Bell_Request
     89            
     90            /*item_renew_cnt = 8;  
     91            data_renew_cnt = 8;  
     92            if(menu==1)
     93              menu=10;
     94            else if(menu>9 && menu<20 && selected==0)  
     95              menu=1;  
     96            else if(menu>9 && menu<20 && selected==1)  
     97              selected=0;    
     98              
     99            curse_display();  */
    100          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    101          
    102          
    103            // --- Keyn_Downspin_Func ---
    104            // triggered when Keyn is pushed down and spinning tacho.
    105            // if triggered , Rise_Func won't be trigger when rises.
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void Key1_Downspin_Func(){
   \                     Key1_Downspin_Func: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    108            
    109            Spin_Func();
   \   00000002   0x.... 0x....      BL       Spin_Func
    110          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    111          

   \                                 In section .text, align 2, keep-with-next
    112          void Key2_Downspin_Func(){
   \                     Key2_Downspin_Func: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    113            
    114            Spin_Func();
   \   00000002   0x.... 0x....      BL       Spin_Func
    115          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    116          

   \                                 In section .text, align 2, keep-with-next
    117          void Key3_Downspin_Func(){
   \                     Key3_Downspin_Func: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    118            
    119            Spin_Func();
   \   00000002   0x.... 0x....      BL       Spin_Func
    120          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    121          
    122          
    123            // --- Spin_Func ---
    124            // triggered when spinning tacho with no Key pushed.

   \                                 In section .text, align 2, keep-with-next
    125          void Spin_Func(){
   \                     Spin_Func: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    126            Bell_Request(1);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       Bell_Request
    127          
    128          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    129          
    130          
    131          
    132          
    133          // ========= Service ======= 
    134          
    135            // Put this in UI refreshing loop (PIT1_ISR)
    136          

   \                                 In section .text, align 2, keep-with-next
    137          void UI_Operation_Service(){
   \                     UI_Operation_Service: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    138            Key3_Read();
   \   00000002   0x.... 0x....      BL       Key3_Read
    139            Key1_Read();
   \   00000006   0x.... 0x....      BL       Key1_Read
    140            Key2_Read();
   \   0000000A   0x.... 0x....      BL       Key2_Read
    141            
    142            ui_operation_shift = ui_operation_cnt/SENSIBILITY;
   \   0000000E   0x....             LDR.N    R0,??DataTable3
   \   00000010   0x8800             LDRH     R0,[R0, #+0]
   \   00000012   0x2108             MOVS     R1,#+8
   \   00000014   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000018   0x....             LDR.N    R1,??DataTable3_1
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
    143            ui_operation_cnt %= SENSIBILITY;
   \   0000001C   0x....             LDR.N    R0,??DataTable3
   \   0000001E   0x8800             LDRH     R0,[R0, #+0]
   \   00000020   0x2108             MOVS     R1,#+8
   \   00000022   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000026   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   0000002A   0x....             LDR.N    R0,??DataTable3
   \   0000002C   0x8002             STRH     R2,[R0, #+0]
    144            
    145            if(Key1_rise){
   \   0000002E   0x....             LDR.N    R0,??DataTable3_2
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD004             BEQ.N    ??UI_Operation_Service_0
    146              Key1_rise=0;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x....             LDR.N    R1,??DataTable3_2
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
    147              Key1_Rise_Func();
   \   0000003C   0x.... 0x....      BL       Key1_Rise_Func
    148            }
    149            if(Key2_rise){
   \                     ??UI_Operation_Service_0: (+1)
   \   00000040   0x....             LDR.N    R0,??DataTable3_3
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD004             BEQ.N    ??UI_Operation_Service_1
    150              Key2_rise=0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable3_3
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
    151              Key2_Rise_Func();
   \   0000004E   0x.... 0x....      BL       Key2_Rise_Func
    152            }
    153            if(Key3_rise){
   \                     ??UI_Operation_Service_1: (+1)
   \   00000052   0x....             LDR.N    R0,??DataTable3_4
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x2800             CMP      R0,#+0
   \   00000058   0xD004             BEQ.N    ??UI_Operation_Service_2
    154              Key3_rise=0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x....             LDR.N    R1,??DataTable3_4
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
    155              Key3_Rise_Func();
   \   00000060   0x.... 0x....      BL       Key3_Rise_Func
    156            }
    157            if(Key1_down && ui_operation_shift!=0 ){       // 
   \                     ??UI_Operation_Service_2: (+1)
   \   00000064   0x....             LDR.N    R0,??DataTable3_5
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD009             BEQ.N    ??UI_Operation_Service_3
   \   0000006C   0x....             LDR.N    R0,??DataTable3_1
   \   0000006E   0x8800             LDRH     R0,[R0, #+0]
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xD005             BEQ.N    ??UI_Operation_Service_3
    158              Key1_risemask=1;
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0x....             LDR.N    R1,??DataTable3_6
   \   00000078   0x7008             STRB     R0,[R1, #+0]
    159              Key1_Downspin_Func();
   \   0000007A   0x.... 0x....      BL       Key1_Downspin_Func
   \   0000007E   0xE021             B.N      ??UI_Operation_Service_4
    160            }
    161            else if(Key2_down && ui_operation_shift!=0 ){       // 
   \                     ??UI_Operation_Service_3: (+1)
   \   00000080   0x....             LDR.N    R0,??DataTable3_7
   \   00000082   0x7800             LDRB     R0,[R0, #+0]
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD009             BEQ.N    ??UI_Operation_Service_5
   \   00000088   0x....             LDR.N    R0,??DataTable3_1
   \   0000008A   0x8800             LDRH     R0,[R0, #+0]
   \   0000008C   0x2800             CMP      R0,#+0
   \   0000008E   0xD005             BEQ.N    ??UI_Operation_Service_5
    162              Key2_risemask=1;
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0x....             LDR.N    R1,??DataTable3_8
   \   00000094   0x7008             STRB     R0,[R1, #+0]
    163              Key2_Downspin_Func();
   \   00000096   0x.... 0x....      BL       Key2_Downspin_Func
   \   0000009A   0xE013             B.N      ??UI_Operation_Service_4
    164            }
    165            else if(Key3_down && ui_operation_shift!=0 ){       // 
   \                     ??UI_Operation_Service_5: (+1)
   \   0000009C   0x....             LDR.N    R0,??DataTable3_9
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD009             BEQ.N    ??UI_Operation_Service_6
   \   000000A4   0x....             LDR.N    R0,??DataTable3_1
   \   000000A6   0x8800             LDRH     R0,[R0, #+0]
   \   000000A8   0x2800             CMP      R0,#+0
   \   000000AA   0xD005             BEQ.N    ??UI_Operation_Service_6
    166              Key3_risemask=1;
   \   000000AC   0x2001             MOVS     R0,#+1
   \   000000AE   0x....             LDR.N    R1,??DataTable3_10
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
    167              Key3_Downspin_Func();
   \   000000B2   0x.... 0x....      BL       Key3_Downspin_Func
   \   000000B6   0xE005             B.N      ??UI_Operation_Service_4
    168            }
    169            else if(ui_operation_shift!=0){
   \                     ??UI_Operation_Service_6: (+1)
   \   000000B8   0x....             LDR.N    R0,??DataTable3_1
   \   000000BA   0x8800             LDRH     R0,[R0, #+0]
   \   000000BC   0x2800             CMP      R0,#+0
   \   000000BE   0xD001             BEQ.N    ??UI_Operation_Service_4
    170              Spin_Func();
   \   000000C0   0x.... 0x....      BL       Spin_Func
    171            }
    172          }
   \                     ??UI_Operation_Service_4: (+1)
   \   000000C4   0xBD01             POP      {R0,PC}          ;; return
    173          
    174          
    175          
    176          
    177          // ===== Basic Drivers ====
    178          

   \                                 In section .text, align 2, keep-with-next
    179          void Key1_Read(){
    180            if(Key1()==0){
   \                     Key1_Read: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_11  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x2000      UBFX     R0,R0,#+8,#+1
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD106             BNE.N    ??Key1_Read_0
    181              Key1_down=1;
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable3_5
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    182              Key1_cnt=0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR.N    R1,??DataTable3_12
   \   00000016   0x7008             STRB     R0,[R1, #+0]
   \   00000018   0xE01B             B.N      ??Key1_Read_1
    183            }
    184            else if(Key1_down && Key1_cnt<DEBOUNCE_CNT)
   \                     ??Key1_Read_0: (+1)
   \   0000001A   0x....             LDR.N    R0,??DataTable3_5
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD009             BEQ.N    ??Key1_Read_2
   \   00000022   0x....             LDR.N    R0,??DataTable3_12
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2806             CMP      R0,#+6
   \   00000028   0xDA05             BGE.N    ??Key1_Read_2
    185              Key1_cnt++;
   \   0000002A   0x....             LDR.N    R0,??DataTable3_12
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \   00000030   0x....             LDR.N    R1,??DataTable3_12
   \   00000032   0x7008             STRB     R0,[R1, #+0]
   \   00000034   0xE00D             B.N      ??Key1_Read_1
    186            else if(Key1_down){
   \                     ??Key1_Read_2: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable3_5
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD006             BEQ.N    ??Key1_Read_3
    187              Key1_down=0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x....             LDR.N    R1,??DataTable3_5
   \   00000042   0x7008             STRB     R0,[R1, #+0]
    188              Key1_rise=1;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x....             LDR.N    R1,??DataTable3_2
   \   00000048   0x7008             STRB     R0,[R1, #+0]
   \   0000004A   0xE002             B.N      ??Key1_Read_1
    189            }
    190            else
    191              Key1_down=0;
   \                     ??Key1_Read_3: (+1)
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x....             LDR.N    R1,??DataTable3_5
   \   00000050   0x7008             STRB     R0,[R1, #+0]
    192          }
   \                     ??Key1_Read_1: (+1)
   \   00000052   0x4770             BX       LR               ;; return
    193          

   \                                 In section .text, align 2, keep-with-next
    194          void Key2_Read(){
    195            if(Key2()==0){
   \                     Key2_Read: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_11  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x2040      UBFX     R0,R0,#+9,#+1
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD106             BNE.N    ??Key2_Read_0
    196              Key2_down=1;
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable3_7
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    197              Key2_cnt=0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR.N    R1,??DataTable3_13
   \   00000016   0x7008             STRB     R0,[R1, #+0]
   \   00000018   0xE01B             B.N      ??Key2_Read_1
    198            }
    199            else if(Key2_down && Key2_cnt<DEBOUNCE_CNT)
   \                     ??Key2_Read_0: (+1)
   \   0000001A   0x....             LDR.N    R0,??DataTable3_7
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD009             BEQ.N    ??Key2_Read_2
   \   00000022   0x....             LDR.N    R0,??DataTable3_13
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2806             CMP      R0,#+6
   \   00000028   0xDA05             BGE.N    ??Key2_Read_2
    200              Key2_cnt++;
   \   0000002A   0x....             LDR.N    R0,??DataTable3_13
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \   00000030   0x....             LDR.N    R1,??DataTable3_13
   \   00000032   0x7008             STRB     R0,[R1, #+0]
   \   00000034   0xE00D             B.N      ??Key2_Read_1
    201            else if(Key2_down){
   \                     ??Key2_Read_2: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable3_7
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD006             BEQ.N    ??Key2_Read_3
    202              Key2_down=0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x....             LDR.N    R1,??DataTable3_7
   \   00000042   0x7008             STRB     R0,[R1, #+0]
    203              Key2_rise=1;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x....             LDR.N    R1,??DataTable3_3
   \   00000048   0x7008             STRB     R0,[R1, #+0]
   \   0000004A   0xE002             B.N      ??Key2_Read_1
    204            }
    205            else
    206              Key2_down=0;
   \                     ??Key2_Read_3: (+1)
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x....             LDR.N    R1,??DataTable3_7
   \   00000050   0x7008             STRB     R0,[R1, #+0]
    207          }
   \                     ??Key2_Read_1: (+1)
   \   00000052   0x4770             BX       LR               ;; return
    208          

   \                                 In section .text, align 2, keep-with-next
    209          void Key3_Read(){
    210            if(Key3()==0){
   \                     Key3_Read: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_11  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x2080      UBFX     R0,R0,#+10,#+1
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD106             BNE.N    ??Key3_Read_0
    211              Key3_down=1;
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable3_9
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    212              Key3_cnt=0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR.N    R1,??DataTable3_14
   \   00000016   0x7008             STRB     R0,[R1, #+0]
   \   00000018   0xE023             B.N      ??Key3_Read_1
    213            }
    214            else if(Key3_down && Key3_cnt<DEBOUNCE_CNT)
   \                     ??Key3_Read_0: (+1)
   \   0000001A   0x....             LDR.N    R0,??DataTable3_9
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD009             BEQ.N    ??Key3_Read_2
   \   00000022   0x....             LDR.N    R0,??DataTable3_14
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x2806             CMP      R0,#+6
   \   00000028   0xDA05             BGE.N    ??Key3_Read_2
    215              Key3_cnt++;
   \   0000002A   0x....             LDR.N    R0,??DataTable3_14
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \   00000030   0x....             LDR.N    R1,??DataTable3_14
   \   00000032   0x7008             STRB     R0,[R1, #+0]
   \   00000034   0xE015             B.N      ??Key3_Read_1
    216            else if(Key3_down){
   \                     ??Key3_Read_2: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable3_9
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD00E             BEQ.N    ??Key3_Read_3
    217              Key3_down=0;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x....             LDR.N    R1,??DataTable3_9
   \   00000042   0x7008             STRB     R0,[R1, #+0]
    218              if(Key3_risemask==0)
   \   00000044   0x....             LDR.N    R0,??DataTable3_10
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD103             BNE.N    ??Key3_Read_4
    219                Key3_rise=1;
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0x....             LDR.N    R1,??DataTable3_4
   \   00000050   0x7008             STRB     R0,[R1, #+0]
   \   00000052   0xE006             B.N      ??Key3_Read_1
    220              else
    221                Key3_risemask=0;
   \                     ??Key3_Read_4: (+1)
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x....             LDR.N    R1,??DataTable3_10
   \   00000058   0x7008             STRB     R0,[R1, #+0]
   \   0000005A   0xE002             B.N      ??Key3_Read_1
    222            }
    223            else
    224              Key3_down=0;
   \                     ??Key3_Read_3: (+1)
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x....             LDR.N    R1,??DataTable3_9
   \   00000060   0x7008             STRB     R0,[R1, #+0]
    225          }
   \                     ??Key3_Read_1: (+1)
   \   00000062   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     ui_operation_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     ui_operation_shift

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     Key1_rise

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     Key2_rise

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     Key3_rise

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     Key1_down

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     Key1_risemask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     Key2_down

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     Key2_risemask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     Key3_down

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     Key3_risemask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x400FF010         DC32     0x400ff010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     Key1_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     Key2_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     Key3_cnt

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Key1_Downspin_Func
         8   -> Spin_Func
       0   Key1_Read
       8   Key1_Rise_Func
         8   -> Bell_Request
       8   Key2_Downspin_Func
         8   -> Spin_Func
       0   Key2_Read
       8   Key2_Rise_Func
         8   -> Bell_Request
       8   Key3_Downspin_Func
         8   -> Spin_Func
       0   Key3_Read
       8   Key3_Rise_Func
         8   -> Bell_Request
       8   Spin_Func
         8   -> Bell_Request
       8   UI_Operation_Service
         8   -> Key1_Downspin_Func
         8   -> Key1_Read
         8   -> Key1_Rise_Func
         8   -> Key2_Downspin_Func
         8   -> Key2_Read
         8   -> Key2_Rise_Func
         8   -> Key3_Downspin_Func
         8   -> Key3_Read
         8   -> Key3_Rise_Func
         8   -> Spin_Func


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       8  Key1_Downspin_Func
      84  Key1_Read
      10  Key1_Rise_Func
       1  Key1_cnt
       1  Key1_down
       1  Key1_rise
       1  Key1_risemask
       8  Key2_Downspin_Func
      84  Key2_Read
      10  Key2_Rise_Func
       1  Key2_cnt
       1  Key2_down
       1  Key2_rise
       1  Key2_risemask
       8  Key3_Downspin_Func
     100  Key3_Read
      10  Key3_Rise_Func
       1  Key3_cnt
       1  Key3_down
       1  Key3_rise
       1  Key3_risemask
      10  Spin_Func
     198  UI_Operation_Service
       2  ui_operation_cnt
       2  ui_operation_shift

 
  16 bytes in section .bss
 590 bytes in section .text
 
 590 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: none
