###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        18/Feb/2016  01:36:22
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\freescale_racing\framework2016\source\HMI.c
#    Command line =  
#        E:\freescale_racing\framework2016\source\HMI.c -lCN
#        E:\freescale_racing\framework2016\FLASH\List\ -lB
#        E:\freescale_racing\framework2016\FLASH\List\ -o
#        E:\freescale_racing\framework2016\FLASH\Obj\ --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\freescale_racing\framework2016\source\ -I
#        E:\freescale_racing\framework2016\common\ -I
#        E:\freescale_racing\framework2016\LPLD\ -I
#        E:\freescale_racing\framework2016\LPLD\HW\ -I
#        E:\freescale_racing\framework2016\LPLD\DEV\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  E:\freescale_racing\framework2016\FLASH\List\HMI.lst
#    Object file  =  E:\freescale_racing\framework2016\FLASH\Obj\HMI.o
#
###############################################################################

E:\freescale_racing\framework2016\source\HMI.c
      1          /*
      2          Arthor : Qian Qiyang (KisaragiAyanoo@twitter)
      3          Date : 2015/12/01
      4          License : MIT
      5          */
      6          
      7          #include "includes.h"
      8          
      9          // ===== Global Variables =====
     10          

   \                                 In section .bss, align 2
     11          U16 battery;
   \                     battery:
   \   00000000                      DS8 2
     12          
     13          // --- Local Variables ---
     14          

   \                                 In section .bss, align 2
     15          u16 bell_request_tick = 0;
   \                     bell_request_tick:
   \   00000000                      DS8 2
     16          
     17          
     18          
     19          // ===== BELL SERVICE ====
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void Bell_Request(u8 tick){
     22            bell_request_tick = tick;
   \                     Bell_Request: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x....             LDR.N    R1,??DataTable7
   \   00000004   0x8008             STRH     R0,[R1, #+0]
     23          }
   \   00000006   0x4770             BX       LR               ;; return
     24          

   \                                 In section .text, align 2, keep-with-next
     25          void Bell_Service(){
   \                     Bell_Service: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     26            if(bell_request_tick>0){
   \   00000002   0x....             LDR.N    R0,??DataTable7
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD008             BEQ.N    ??Bell_Service_0
     27              bell_request_tick--;
   \   0000000A   0x....             LDR.N    R0,??DataTable7
   \   0000000C   0x8800             LDRH     R0,[R0, #+0]
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0x....             LDR.N    R1,??DataTable7
   \   00000012   0x8008             STRH     R0,[R1, #+0]
     28              BELL(1);
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       BELL
   \   0000001A   0xE002             B.N      ??Bell_Service_1
     29            }
     30            else
     31              BELL(0);
   \                     ??Bell_Service_0: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x.... 0x....      BL       BELL
     32          }
   \                     ??Bell_Service_1: (+1)
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
     33          
     34          
     35          
     36          
     37          // ===== Basic APIs =====
     38          
     39          //----- LED ------
     40          

   \                                 In section .text, align 2, keep-with-next
     41          void LED2(u8 x){
     42            if(x)
   \                     LED2: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD006             BEQ.N    ??LED2_0
     43              PTA->PSOR |= 1<<7;
   \   00000006   0x....             LDR.N    R0,??DataTable7_1  ;; 0x400ff004
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000000E   0x....             LDR.N    R1,??DataTable7_1  ;; 0x400ff004
   \   00000010   0x6008             STR      R0,[R1, #+0]
   \   00000012   0xE005             B.N      ??LED2_1
     44            else
     45              PTA->PCOR |= 1<<7;
   \                     ??LED2_0: (+1)
   \   00000014   0x....             LDR.N    R0,??DataTable7_2  ;; 0x400ff008
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000001C   0x....             LDR.N    R1,??DataTable7_2  ;; 0x400ff008
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     46          }
   \                     ??LED2_1: (+1)
   \   00000020   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     47          void LED2_Tog(){
     48            PTA->PTOR |= 1<<7;
   \                     LED2_Tog: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable7_3  ;; 0x400ff00c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000008   0x....             LDR.N    R1,??DataTable7_3  ;; 0x400ff00c
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     49          }
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     50          void LED1(u8 x){
     51            if(x)
   \                     LED1: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD006             BEQ.N    ??LED1_0
     52              PTA->PSOR |= 1<<6;
   \   00000006   0x....             LDR.N    R0,??DataTable7_1  ;; 0x400ff004
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   0000000E   0x....             LDR.N    R1,??DataTable7_1  ;; 0x400ff004
   \   00000010   0x6008             STR      R0,[R1, #+0]
   \   00000012   0xE005             B.N      ??LED1_1
     53            else
     54              PTA->PCOR |= 1<<6;
   \                     ??LED1_0: (+1)
   \   00000014   0x....             LDR.N    R0,??DataTable7_2  ;; 0x400ff008
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   0000001C   0x....             LDR.N    R1,??DataTable7_2  ;; 0x400ff008
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     55          }
   \                     ??LED1_1: (+1)
   \   00000020   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     56          void LED1_Tog(){
     57            PTA->PTOR |= 1<<6;
   \                     LED1_Tog: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable7_3  ;; 0x400ff00c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000008   0x....             LDR.N    R1,??DataTable7_3  ;; 0x400ff00c
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     58          }
   \   0000000C   0x4770             BX       LR               ;; return
     59          
     60          //----- Bell ------
     61          

   \                                 In section .text, align 2, keep-with-next
     62          void BELL(u8 x){
     63            /*if(x)
     64              PTD->PSOR |= 1<<15;
     65            else
     66              PTD->PCOR |= 1<<15;*/
     67          }
   \                     BELL: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     68          
     69          
     70          // --- battery  ---

   \                                 In section .text, align 2, keep-with-next
     71          u16 Battery(){
     72            u16 tmp;
     73            ADC1->SC1[0] = ADC_SC1_ADCH(0);
   \                     Battery: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable7_4  ;; 0x400bb000
   \   00000004   0x6008             STR      R0,[R1, #+0]
     74            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Battery_0: (+1)
   \   00000006   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400bb000
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0600             LSLS     R0,R0,#+24
   \   0000000C   0xD5FB             BPL.N    ??Battery_0
     75            tmp = ADC1->R[0];
   \   0000000E   0x....             LDR.N    R0,??DataTable7_5  ;; 0x400bb010
   \   00000010   0x6800             LDR      R0,[R0, #+0]
     76            //
     77            return tmp;
   \   00000012   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0x4770             BX       LR               ;; return
     78          }
     79          
     80          
     81          // ===== INIT =====
     82          

   \                                 In section .text, align 2, keep-with-next
     83          void HMI_Init(void){
     84            
     85            //===== LED =====
     86            PORTA->PCR[6] |= PORT_PCR_MUX(1);
   \                     HMI_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable7_6  ;; 0x40049018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000008   0x....             LDR.N    R1,??DataTable7_6  ;; 0x40049018
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     87            PORTA->PCR[7] |= PORT_PCR_MUX(1);
   \   0000000C   0x....             LDR.N    R0,??DataTable7_7  ;; 0x4004901c
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000014   0x....             LDR.N    R1,??DataTable7_7  ;; 0x4004901c
   \   00000016   0x6008             STR      R0,[R1, #+0]
     88            PTA->PDDR |= (3<<6);
   \   00000018   0x....             LDR.N    R0,??DataTable7_8  ;; 0x400ff014
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF050 0x00C0      ORRS     R0,R0,#0xC0
   \   00000020   0x....             LDR.N    R1,??DataTable7_8  ;; 0x400ff014
   \   00000022   0x6008             STR      R0,[R1, #+0]
     89            PTA->PDOR |= (3<<6);
   \   00000024   0x....             LDR.N    R0,??DataTable7_9  ;; 0x400ff000
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF050 0x00C0      ORRS     R0,R0,#0xC0
   \   0000002C   0x....             LDR.N    R1,??DataTable7_9  ;; 0x400ff000
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     90          
     91            //===== KEY =====
     92            PORTA->PCR[8] |= PORT_PCR_MUX(1);
   \   00000030   0x....             LDR.N    R0,??DataTable7_10  ;; 0x40049020
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000038   0x....             LDR.N    R1,??DataTable7_10  ;; 0x40049020
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     93            PORTA->PCR[9] |= PORT_PCR_MUX(1);
   \   0000003C   0x....             LDR.N    R0,??DataTable7_11  ;; 0x40049024
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000044   0x....             LDR.N    R1,??DataTable7_11  ;; 0x40049024
   \   00000046   0x6008             STR      R0,[R1, #+0]
     94            PORTA->PCR[10] |= PORT_PCR_MUX(1);
   \   00000048   0x....             LDR.N    R0,??DataTable7_12  ;; 0x40049028
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000050   0x....             LDR.N    R1,??DataTable7_12  ;; 0x40049028
   \   00000052   0x6008             STR      R0,[R1, #+0]
     95            PTA->PDDR &=~(7<<8);
   \   00000054   0x....             LDR.N    R0,??DataTable7_8  ;; 0x400ff014
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF430 0x60E0      BICS     R0,R0,#0x700
   \   0000005C   0x....             LDR.N    R1,??DataTable7_8  ;; 0x400ff014
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     96            PORTA->PCR[8] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;	//PULLUP
   \   00000060   0x....             LDR.N    R0,??DataTable7_10  ;; 0x40049020
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   00000068   0x....             LDR.N    R1,??DataTable7_10  ;; 0x40049020
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     97            PORTA->PCR[9] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;
   \   0000006C   0x....             LDR.N    R0,??DataTable7_11  ;; 0x40049024
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   00000074   0x....             LDR.N    R1,??DataTable7_11  ;; 0x40049024
   \   00000076   0x6008             STR      R0,[R1, #+0]
     98            PORTA->PCR[10] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;
   \   00000078   0x....             LDR.N    R0,??DataTable7_12  ;; 0x40049028
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   00000080   0x....             LDR.N    R1,??DataTable7_12  ;; 0x40049028
   \   00000082   0x6008             STR      R0,[R1, #+0]
     99            
    100            //===== SW =====
    101            PORTC->PCR[4] |= PORT_PCR_MUX(1);
   \   00000084   0x....             LDR.N    R0,??DataTable7_13  ;; 0x4004b010
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000008C   0x....             LDR.N    R1,??DataTable7_13  ;; 0x4004b010
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    102            PORTC->PCR[5] |= PORT_PCR_MUX(1);
   \   00000090   0x....             LDR.N    R0,??DataTable7_14  ;; 0x4004b014
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000098   0x....             LDR.N    R1,??DataTable7_14  ;; 0x4004b014
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    103            PORTC->PCR[6] |= PORT_PCR_MUX(1);
   \   0000009C   0x....             LDR.N    R0,??DataTable7_15  ;; 0x4004b018
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000A4   0x....             LDR.N    R1,??DataTable7_15  ;; 0x4004b018
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    104            PORTC->PCR[7] |= PORT_PCR_MUX(1);
   \   000000A8   0x....             LDR.N    R0,??DataTable7_16  ;; 0x4004b01c
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000B0   0x....             LDR.N    R1,??DataTable7_16  ;; 0x4004b01c
   \   000000B2   0x6008             STR      R0,[R1, #+0]
    105            PTC->PDDR &=~(0xf<<4);
   \   000000B4   0x....             LDR.N    R0,??DataTable7_17  ;; 0x400ff094
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0xF030 0x00F0      BICS     R0,R0,#0xF0
   \   000000BC   0x....             LDR.N    R1,??DataTable7_17  ;; 0x400ff094
   \   000000BE   0x6008             STR      R0,[R1, #+0]
    106            PORTC->PCR[4] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;
   \   000000C0   0x....             LDR.N    R0,??DataTable7_13  ;; 0x4004b010
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   000000C8   0x....             LDR.N    R1,??DataTable7_13  ;; 0x4004b010
   \   000000CA   0x6008             STR      R0,[R1, #+0]
    107            PORTC->PCR[5] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;
   \   000000CC   0x....             LDR.N    R0,??DataTable7_14  ;; 0x4004b014
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   000000D4   0x....             LDR.N    R1,??DataTable7_14  ;; 0x4004b014
   \   000000D6   0x6008             STR      R0,[R1, #+0]
    108            PORTC->PCR[6] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;
   \   000000D8   0x....             LDR.N    R0,??DataTable7_15  ;; 0x4004b018
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   000000E0   0x....             LDR.N    R1,??DataTable7_15  ;; 0x4004b018
   \   000000E2   0x6008             STR      R0,[R1, #+0]
    109            PORTC->PCR[7] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;  
   \   000000E4   0x....             LDR.N    R0,??DataTable7_16  ;; 0x4004b01c
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   000000EC   0x....             LDR.N    R1,??DataTable7_16  ;; 0x4004b01c
   \   000000EE   0x6008             STR      R0,[R1, #+0]
    110            
    111            //===== Bell =====
    112            PORTD->PCR[15] |= PORT_PCR_MUX(1);
   \   000000F0   0x....             LDR.N    R0,??DataTable7_18  ;; 0x4004c03c
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000F8   0x....             LDR.N    R1,??DataTable7_18  ;; 0x4004c03c
   \   000000FA   0x6008             STR      R0,[R1, #+0]
    113            PTD->PDDR |= (1<<15);
   \   000000FC   0x....             LDR.N    R0,??DataTable7_19  ;; 0x400ff0d4
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   00000104   0x....             LDR.N    R1,??DataTable7_19  ;; 0x400ff0d4
   \   00000106   0x6008             STR      R0,[R1, #+0]
    114            PTD->PDOR &=~ (1<<15);
   \   00000108   0x....             LDR.N    R0,??DataTable7_20  ;; 0x400ff0c0
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0xF430 0x4000      BICS     R0,R0,#0x8000
   \   00000110   0x....             LDR.N    R1,??DataTable7_20  ;; 0x400ff0c0
   \   00000112   0x6008             STR      R0,[R1, #+0]
    115          
    116            //==== battery ====
    117            
    118            if(!ADC1_enabled){
   \   00000114   0x....             LDR.N    R0,??DataTable7_21
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x2800             CMP      R0,#+0
   \   0000011A   0xD11A             BNE.N    ??HMI_Init_0
    119              SIM->SCGC3 |= SIM_SCGC3_ADC1_MASK;  //ADC1 Clock Enable
   \   0000011C   0x....             LDR.N    R0,??DataTable7_22  ;; 0x40048030
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   00000124   0x....             LDR.N    R1,??DataTable7_22  ;; 0x40048030
   \   00000126   0x6008             STR      R0,[R1, #+0]
    120              ADC1->CFG1 |= 0
    121                         //|ADC_CFG1_ADLPC_MASK
    122                         | ADC_CFG1_ADICLK(1)
    123                         | ADC_CFG1_MODE(1);
   \   00000128   0x....             LDR.N    R0,??DataTable7_23  ;; 0x400bb008
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0xF050 0x0005      ORRS     R0,R0,#0x5
   \   00000130   0x....             LDR.N    R1,??DataTable7_23  ;; 0x400bb008
   \   00000132   0x6008             STR      R0,[R1, #+0]
    124                         //| ADC_CFG1_ADIV(0);
    125              ADC1->CFG2 |= //ADC_CFG2_ADHSC_MASK |
    126                            ADC_CFG2_ADACKEN_MASK; 
   \   00000134   0x....             LDR.N    R0,??DataTable7_24  ;; 0x400bb00c
   \   00000136   0x6800             LDR      R0,[R0, #+0]
   \   00000138   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000013C   0x....             LDR.N    R1,??DataTable7_24  ;; 0x400bb00c
   \   0000013E   0x6008             STR      R0,[R1, #+0]
    127              
    128              ADC1->SC1[0]&=~ADC_SC1_AIEN_MASK;//disenble interrupt
   \   00000140   0x....             LDR.N    R0,??DataTable7_4  ;; 0x400bb000
   \   00000142   0x6800             LDR      R0,[R0, #+0]
   \   00000144   0xF030 0x0040      BICS     R0,R0,#0x40
   \   00000148   0x....             LDR.N    R1,??DataTable7_4  ;; 0x400bb000
   \   0000014A   0x6008             STR      R0,[R1, #+0]
    129              ADC1_enabled = 1;
   \   0000014C   0x2001             MOVS     R0,#+1
   \   0000014E   0x....             LDR.N    R1,??DataTable7_21
   \   00000150   0x7008             STRB     R0,[R1, #+0]
    130            }
    131          }
   \                     ??HMI_Init_0: (+1)
   \   00000152   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     bell_request_tick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x400FF004         DC32     0x400ff004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x400FF008         DC32     0x400ff008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x400FF00C         DC32     0x400ff00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x400BB010         DC32     0x400bb010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x40049018         DC32     0x40049018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x4004901C         DC32     0x4004901c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x400FF014         DC32     0x400ff014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x40049020         DC32     0x40049020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x40049024         DC32     0x40049024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x40049028         DC32     0x40049028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x4004B010         DC32     0x4004b010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x4004B014         DC32     0x4004b014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x4004B018         DC32     0x4004b018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x4004B01C         DC32     0x4004b01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x400FF094         DC32     0x400ff094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x4004C03C         DC32     0x4004c03c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x400FF0D4         DC32     0x400ff0d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_21:
   \   00000000   0x........         DC32     ADC1_enabled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_22:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_23:
   \   00000000   0x400BB008         DC32     0x400bb008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_24:
   \   00000000   0x400BB00C         DC32     0x400bb00c
    132          
    133          
    134          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BELL
       0   Battery
       0   Bell_Request
       8   Bell_Service
         8   -> BELL
       0   HMI_Init
       0   LED1
       0   LED1_Tog
       0   LED2
       0   LED2_Tog


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_21
       4  ??DataTable7_22
       4  ??DataTable7_23
       4  ??DataTable7_24
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
       2  BELL
      22  Battery
       8  Bell_Request
      36  Bell_Service
     340  HMI_Init
      34  LED1
      14  LED1_Tog
      34  LED2
      14  LED2_Tog
       2  battery
       2  bell_request_tick

 
   4 bytes in section .bss
 604 bytes in section .text
 
 604 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
