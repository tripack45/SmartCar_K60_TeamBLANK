###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        18/Feb/2016  00:48:05
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\freescale_racing\framework2016\source\Bluetooth.c
#    Command line =  
#        E:\freescale_racing\framework2016\source\Bluetooth.c -lCN
#        E:\freescale_racing\framework2016\FLASH\List\ -lB
#        E:\freescale_racing\framework2016\FLASH\List\ -o
#        E:\freescale_racing\framework2016\FLASH\Obj\ --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\freescale_racing\framework2016\source\ -I
#        E:\freescale_racing\framework2016\common\ -I
#        E:\freescale_racing\framework2016\LPLD\ -I
#        E:\freescale_racing\framework2016\LPLD\HW\ -I
#        E:\freescale_racing\framework2016\LPLD\DEV\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  E:\freescale_racing\framework2016\FLASH\List\Bluetooth.lst
#    Object file  =  E:\freescale_racing\framework2016\FLASH\Obj\Bluetooth.o
#
###############################################################################

E:\freescale_racing\framework2016\source\Bluetooth.c
      1          #include "includes.h"
      2          

   \                                 In section .text, align 2, keep-with-next
      3          void Bluetooth_Configure(){
   \                     Bluetooth_Configure: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      4            Oled_Clear();
   \   00000002   0x.... 0x....      BL       Oled_Clear
      5            Oled_Putstr(1,0,"Bluetooth Configure!");
   \   00000006   0x....             LDR.N    R2,??DataTable3
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x.... 0x....      BL       Oled_Putstr
      6            Oled_Putstr(6,0,"Press Key1 to Cont.");
   \   00000010   0x....             LDR.N    R2,??DataTable3_1
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2006             MOVS     R0,#+6
   \   00000016   0x.... 0x....      BL       Oled_Putstr
      7            while(Key1());while(!Key1());
   \                     ??Bluetooth_Configure_0: (+1)
   \   0000001A   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff010
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF3C0 0x2000      UBFX     R0,R0,#+8,#+1
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD1F9             BNE.N    ??Bluetooth_Configure_0
   \                     ??Bluetooth_Configure_1: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable3_2  ;; 0x400ff010
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF3C0 0x2000      UBFX     R0,R0,#+8,#+1
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD0F9             BEQ.N    ??Bluetooth_Configure_1
      8            Oled_Clear();
   \   00000032   0x.... 0x....      BL       Oled_Clear
      9            Oled_Putstr(1,0,"Sending T");
   \   00000036   0x....             LDR.N    R2,??DataTable3_3
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      BL       Oled_Putstr
     10            //for(;;)Bluetooth_WriteStr("Test");
     11            Oled_Clear();
   \   00000040   0x.... 0x....      BL       Oled_Clear
     12          }
   \   00000044   0xBD01             POP      {R0,PC}          ;; return
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void Bluetooth_SendDataChunkSync(uint8* chunk_ptr, uint16 size){
   \                     Bluetooth_SendDataChunkSync: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     15              UART_SendDataChunk(chunk_ptr,size);
   \   00000002   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000004   0x.... 0x....      BL       UART_SendDataChunk
     16              while(!(IS_UART_DMA_COMPLETE() && IS_UART_SEND_COMPLETE()));
   \                     ??Bluetooth_SendDataChunkSync_0: (+1)
   \   00000008   0x....             LDR.N    R0,??DataTable3_4  ;; 0x4000903c
   \   0000000A   0x8800             LDRH     R0,[R0, #+0]
   \   0000000C   0x0600             LSLS     R0,R0,#+24
   \   0000000E   0xD5FB             BPL.N    ??Bluetooth_SendDataChunkSync_0
   \   00000010   0x....             LDR.N    R0,??DataTable3_5  ;; 0x4006d004
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x0640             LSLS     R0,R0,#+25
   \   00000016   0xD5F7             BPL.N    ??Bluetooth_SendDataChunkSync_0
     17              
     18          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
     19          

   \                                 In section .text, align 2, keep-with-next
     20          void Bluetooth_SendDataChunkAsync(uint8* chunk_ptr, uint16 size){
   \                     Bluetooth_SendDataChunkAsync: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     21              UART_SendDataChunk(chunk_ptr, (uint16)size);
   \   00000002   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000004   0x.... 0x....      BL       UART_SendDataChunk
     22          }
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
     23          

   \                                 In section .text, align 2, keep-with-next
     24          int Bluetooth_IsSendDataChunkComplete(){
     25            return IS_UART_DMA_COMPLETE() && IS_UART_SEND_COMPLETE();
   \                     Bluetooth_IsSendDataChunkComplete: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_4  ;; 0x4000903c
   \   00000002   0x8800             LDRH     R0,[R0, #+0]
   \   00000004   0x0600             LSLS     R0,R0,#+24
   \   00000006   0xD506             BPL.N    ??Bluetooth_IsSendDataChunkComplete_0
   \   00000008   0x....             LDR.N    R0,??DataTable3_5  ;; 0x4006d004
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0xF010 0x0040      ANDS     R0,R0,#0x40
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x0980             LSRS     R0,R0,#+6
   \   00000014   0xE000             B.N      ??Bluetooth_IsSendDataChunkComplete_1
   \                     ??Bluetooth_IsSendDataChunkComplete_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \                     ??Bluetooth_IsSendDataChunkComplete_1: (+1)
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x4770             BX       LR               ;; return
     26          }
     27          

   \                                 In section .text, align 2, keep-with-next
     28          void Bluetooth_SendDataChunkObselete(u8* chunk_ptr,uint16 size){
   \                     Bluetooth_SendDataChunkObselete: (+1)
   \   00000000   0xB410             PUSH     {R4}
     29            for(int i=0;i<size;i++){
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0xE008             B.N      ??Bluetooth_SendDataChunkObselete_0
     30              while(!(UART3->S1 & UART_S1_TDRE_MASK));
   \                     ??Bluetooth_SendDataChunkObselete_1: (+1)
   \   00000006   0x....             LDR.N    R3,??DataTable3_5  ;; 0x4006d004
   \   00000008   0x781B             LDRB     R3,[R3, #+0]
   \   0000000A   0x061B             LSLS     R3,R3,#+24
   \   0000000C   0xD5FB             BPL.N    ??Bluetooth_SendDataChunkObselete_1
     31              UART3->D = *chunk_ptr;
   \   0000000E   0x7803             LDRB     R3,[R0, #+0]
   \   00000010   0x....             LDR.N    R4,??DataTable3_6  ;; 0x4006d007
   \   00000012   0x7023             STRB     R3,[R4, #+0]
     32              chunk_ptr++;
   \   00000014   0x1C40             ADDS     R0,R0,#+1
     33            }
   \   00000016   0x1C52             ADDS     R2,R2,#+1
   \                     ??Bluetooth_SendDataChunkObselete_0: (+1)
   \   00000018   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001A   0x428A             CMP      R2,R1
   \   0000001C   0xDBF3             BLT.N    ??Bluetooth_SendDataChunkObselete_1
     34          }
   \   0000001E   0xBC10             POP      {R4}
   \   00000020   0x4770             BX       LR               ;; return
     35          

   \                                 In section .text, align 2, keep-with-next
     36          void Bluetooth_SendStr(char* str){
   \                     Bluetooth_SendStr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     37            char* p=str;
   \   00000004   0xE004             B.N      ??Bluetooth_SendStr_0
     38            while(*p!='\0'){
     39              UART_SendChar(*p);
   \                     ??Bluetooth_SendStr_1: (+1)
   \   00000006   0x7820             LDRB     R0,[R4, #+0]
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       UART_SendChar
     40              p++;
   \   0000000E   0x1C64             ADDS     R4,R4,#+1
     41            }
   \                     ??Bluetooth_SendStr_0: (+1)
   \   00000010   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F6             BNE.N    ??Bluetooth_SendStr_1
     42            UART_SendChar('\r');
   \   00000018   0x200D             MOVS     R0,#+13
   \   0000001A   0x.... 0x....      BL       UART_SendChar
     43            UART_SendChar('\n');
   \   0000001E   0x200A             MOVS     R0,#+10
   \   00000020   0x.... 0x....      BL       UART_SendChar
     44          }
   \   00000024   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x400FF010         DC32     0x400ff010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x4000903C         DC32     0x4000903c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x4006D004         DC32     0x4006d004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x4006D007         DC32     0x4006d007

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x42 0x6C          DC8 "Bluetooth Configure!"
   \              0x75 0x65    
   \              0x74 0x6F    
   \              0x6F 0x74    
   \              0x68 0x20    
   \              0x43 0x6F    
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \              0x65 0x21    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x50 0x72          DC8 "Press Key1 to Cont."
   \              0x65 0x73    
   \              0x73 0x20    
   \              0x4B 0x65    
   \              0x79 0x31    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x43 0x6F    
   \              0x6E 0x74    
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x53 0x65          DC8 "Sending T"
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x54 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0
     45            

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Bluetooth_Configure
         8   -> Oled_Clear
         8   -> Oled_Putstr
       0   Bluetooth_IsSendDataChunkComplete
       8   Bluetooth_SendDataChunkAsync
         8   -> UART_SendDataChunk
       4   Bluetooth_SendDataChunkObselete
       8   Bluetooth_SendDataChunkSync
         8   -> UART_SendDataChunk
       8   Bluetooth_SendStr
         8   -> UART_SendChar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
      24  ?_0
      20  ?_1
      12  ?_2
      70  Bluetooth_Configure
      28  Bluetooth_IsSendDataChunkComplete
      10  Bluetooth_SendDataChunkAsync
      34  Bluetooth_SendDataChunkObselete
      26  Bluetooth_SendDataChunkSync
      38  Bluetooth_SendStr

 
  56 bytes in section .rodata
 234 bytes in section .text
 
 234 bytes of CODE  memory
  56 bytes of CONST memory

Errors: none
Warnings: none
