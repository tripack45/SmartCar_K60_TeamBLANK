###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        21/Feb/2016  03:11:37
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\source\OLED_UI.c
#    Command line =  
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\source\OLED_UI.c -lCN
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\FLASH\List\ -lB
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\FLASH\List\ -o
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --char_is_signed --fpu=None --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\source\ -I
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\common\ -I
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\LPLD\ -I
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\LPLD\HW\ -I
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\LPLD\DEV\ -Ol -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\FLASH\List\OLED_UI.lst
#    Object file  =  
#        E:\freescale_racing\SmartCar_K60_TeamBLANK\FLASH\Obj\OLED_UI.o
#
###############################################################################

E:\freescale_racing\SmartCar_K60_TeamBLANK\source\OLED_UI.c
      1          
      2          #include "includes.h"
      3          

   \                                 In section .bss, align 2
      4          uint16 debug_num=0;
   \                     debug_num:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
      5          uint16 e_debug_num=0;
   \                     e_debug_num:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
      6          U32 tclk=0;
   \                     tclk:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
      7          char debug_msg[]="CF= LF= PF= SF=";
   \                     debug_msg:
   \   00000000   0x43 0x46          DC8 "CF= LF= PF= SF="
   \              0x3D 0x20    
   \              0x4C 0x46    
   \              0x3D 0x20    
   \              0x50 0x46    
   \              0x3D 0x20    
   \              0x53 0x46    
   \              0x3D 0x00    
      8            /*
      9            UI_Page homepage;
     10            UI_Page subpage0;
     11            homepage.sub_type = (enum Item_Type *) malloc (4*2);
     12            homepage.sub_type[0] = Item_Type_Menu;
     13            homepage.sub = (void **)malloc (4*2); // (void **)(UI_Page **)
     14            *((UI_Page **)(homepage.sub)+0) = (UI_Page *) &subpage0;
     15            subpage0.parent = (void *) &homepage;
     16            
     17            subpage0.sub = (void **)123;
     18            Oled_Putnum(0,0,(s16)((*((UI_Page **)homepage.sub+0))->sub));
     19            */
     20            //free(homepage.sub);
     21            //free(homepage.sub_type);
     22          
     23          
     24          enum Item_Type{
     25              Item_Type_Menu,
     26              Item_Type_Para,
     27              Item_Type_Show,
     28              Item_Type_Func,
     29          };
     30          
     31          typedef struct {
     32            void * parent;   // UI_Page *
     33            enum Item_Type * sub_type; 
     34            void ** sub;  // UI_Page **
     35          }UI_Page;
     36          
     37          

   \                                 In section .text, align 2, keep-with-next
     38          void UI_SystemInfo(){
   \                     UI_SystemInfo: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     39            //Oled_Putstr(0,0,"Car Type"); Oled_Putnum(0,11,CAR_TYPE);
     40            //Oled_Putstr(1,0,"battery"); Oled_Putnum(1,11,battery);
     41            Oled_Putstr(2,0,"Dbg"); Oled_Putnum(2,5,debug_num);
   \   00000002   0x....             ADR.N    R2,??DataTable0  ;; "Dbg"
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       Oled_Putstr
   \   0000000C   0x....             LDR.N    R0,??DataTable0_2
   \   0000000E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000012   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000014   0x2105             MOVS     R1,#+5
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0x.... 0x....      BL       Oled_Putnum
     42                                    Oled_Putnum(2,11,e_debug_num);
   \   0000001C   0x....             LDR.N    R0,??DataTable0_3
   \   0000001E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000022   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000024   0x210B             MOVS     R1,#+11
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x.... 0x....      BL       Oled_Putnum
     43            Oled_Putstr(3,0,"pit0/1"); Oled_Putnum(3,5,(s16)pit0_time);
   \   0000002C   0x....             LDR.N    R2,??DataTable0_4
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x2003             MOVS     R0,#+3
   \   00000032   0x.... 0x....      BL       Oled_Putstr
   \   00000036   0x....             LDR.N    R0,??DataTable0_5
   \   00000038   0x6802             LDR      R2,[R0, #+0]
   \   0000003A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000003C   0x2105             MOVS     R1,#+5
   \   0000003E   0x2003             MOVS     R0,#+3
   \   00000040   0x.... 0x....      BL       Oled_Putnum
     44                                        Oled_Putnum(3,11,(s16)pit1_time);
   \   00000044   0x....             LDR.N    R0,??DataTable0_6
   \   00000046   0x6802             LDR      R2,[R0, #+0]
   \   00000048   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000004A   0x210B             MOVS     R1,#+11
   \   0000004C   0x2003             MOVS     R0,#+3
   \   0000004E   0x.... 0x....      BL       Oled_Putnum
     45            //Oled_Putstr(4,0,"tac0/1"); Oled_Putnum(4,5,tacho0);
     46            //                            Oled_Putnum(4,11,tacho1);
     47            Oled_Putstr(5,0,(void*)debug_msg);
   \   00000052   0x....             LDR.N    R2,??DataTable0_7
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0x2005             MOVS     R0,#+5
   \   00000058   0x.... 0x....      BL       Oled_Putstr
     48          #if (CAR_TYPE==0)   // Magnet and Balance
     49            
     50            Oled_Putstr(7,0,"accx"); Oled_Putnum(7,11,accx);
     51            
     52          #elif (CAR_TYPE==1)     // CCD
     53            
     54            
     55          #else               // Camera
     56            Oled_Putstr(6,0,"Send"); 
   \   0000005C   0x....             LDR.N    R2,??DataTable0_8
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x2006             MOVS     R0,#+6
   \   00000062   0x.... 0x....      BL       Oled_Putstr
     57            Oled_Putnum(6,5,last_sent_frame);
   \   00000066   0x....             LDR.N    R0,??DataTable0_9
   \   00000068   0x6802             LDR      R2,[R0, #+0]
   \   0000006A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000006C   0x2105             MOVS     R1,#+5
   \   0000006E   0x2006             MOVS     R0,#+6
   \   00000070   0x.... 0x....      BL       Oled_Putnum
     58            Oled_Putnum(6,11,send_diff);
   \   00000074   0x....             LDR.N    R0,??DataTable0_10
   \   00000076   0x6802             LDR      R2,[R0, #+0]
   \   00000078   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000007A   0x210B             MOVS     R1,#+11
   \   0000007C   0x2006             MOVS     R0,#+6
   \   0000007E   0x.... 0x....      BL       Oled_Putnum
     59            Oled_Putstr(7,0,"cam"); 
   \   00000082   0x....             ADR.N    R2,??DataTable0_1  ;; "cam"
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x2007             MOVS     R0,#+7
   \   00000088   0x.... 0x....      BL       Oled_Putstr
     60            Oled_Putnum(7,5,last_processed_frame);
   \   0000008C   0x....             LDR.N    R0,??DataTable0_11
   \   0000008E   0x6802             LDR      R2,[R0, #+0]
   \   00000090   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000092   0x2105             MOVS     R1,#+5
   \   00000094   0x2007             MOVS     R0,#+7
   \   00000096   0x.... 0x....      BL       Oled_Putnum
     61            Oled_Putnum(7,11,process_diff);
   \   0000009A   0x....             LDR.N    R0,??DataTable0_12
   \   0000009C   0x6802             LDR      R2,[R0, #+0]
   \   0000009E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000A0   0x210B             MOVS     R1,#+11
   \   000000A2   0x2007             MOVS     R0,#+7
   \   000000A4   0x.... 0x....      BL       Oled_Putnum
     62            //cam_acquired_frames=0;
     63          #endif
     64          }
   \   000000A8   0xBD01             POP      {R0,PC}          ;; return
     65          

   \                                 In section .text, align 2, keep-with-next
     66          void UI_Graph(u8* data){
     67            
     68          }
   \                     UI_Graph: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x44 0x62          DC8      "Dbg"
   \              0x67 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x63 0x61          DC8      "cam"
   \              0x6D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     debug_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     e_debug_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     pit0_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x........         DC32     pit1_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0x........         DC32     debug_msg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_8:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_9:
   \   00000000   0x........         DC32     last_sent_frame

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_10:
   \   00000000   0x........         DC32     send_diff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_11:
   \   00000000   0x........         DC32     last_processed_frame

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_12:
   \   00000000   0x........         DC32     process_diff

   \                                 In section .rodata, align 4
   \   00000000   0x44 0x62          DC8 "Dbg"
   \              0x67 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x70 0x69          DC8 "pit0/1"
   \              0x74 0x30    
   \              0x2F 0x31    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x53 0x65          DC8 "Send"
   \              0x6E 0x64    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x61          DC8 "cam"
   \              0x6D 0x00    
     69          
     70          
     71          
     72          
     73          
     74          
     75          
     76          
     77          
     78          
     79          
     80          
     81          
     82          
     83          
     84          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   UI_Graph
       8   UI_SystemInfo
         8   -> Oled_Putnum
         8   -> Oled_Putstr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_10
       4  ??DataTable0_11
       4  ??DataTable0_12
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable0_8
       4  ??DataTable0_9
       4  ?_0
       8  ?_1
       8  ?_2
       4  ?_3
       2  UI_Graph
     170  UI_SystemInfo
      16  debug_msg
       2  debug_num
       2  e_debug_num
       4  tclk

 
   8 bytes in section .bss
  16 bytes in section .data
  24 bytes in section .rodata
 224 bytes in section .text
 
 224 bytes of CODE  memory
  24 bytes of CONST memory
  24 bytes of DATA  memory

Errors: none
Warnings: none
