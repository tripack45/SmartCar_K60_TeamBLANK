###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        21/Feb/2016  16:04:27
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\source\IMU.c
#    Command line =  
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\source\IMU.c
#        -lCN
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\FLASH\List\
#        -lB
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\FLASH\List\
#        -o
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --char_is_signed --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\source\ -I
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\common\ -I
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\LPLD\ -I
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\LPLD\HW\
#        -I
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\LPLD\DEV\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\FLASH\List\IMU.lst
#    Object file  =  
#        C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\FLASH\Obj\IMU.o
#
###############################################################################

C:\Users\lichunchao\Documents\GitHub\SmartCar_K60_TeamBLANK\source\IMU.c
      1          /*
      2          Arthor : Qian Qiyang (KisaragiAyanoo@twitter)
      3          Date : 2015/12/01
      4          License : MIT
      5          */
      6          
      7          
      8          #include "includes.h"
      9          
     10          
     11          // ===== Global Variables =====
     12          

   \                                 In section .bss, align 2
     13          S16 accx, accy, accz;
   \                     accx:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     accy:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     accz:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     14          S16 gyro1, gyro2;
   \                     gyro1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     gyro2:
   \   00000000                      DS8 2
     15          
     16          
     17          
     18          // ===== API Realization =====
     19          

   \                                 In section .text, align 2, keep-with-next
     20          s16 Gyro1(){
     21          #if GYRO_ADCx
     22            ADC1->SC1[0] = ADC_SC1_ADCH(8);
   \                     Gyro1: (+1)
   \   00000000   0x2008             MOVS     R0,#+8
   \   00000002   0x....             LDR.N    R1,??DataTable2  ;; 0x400bb000
   \   00000004   0x6008             STR      R0,[R1, #+0]
     23            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Gyro1_0: (+1)
   \   00000006   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0600             LSLS     R0,R0,#+24
   \   0000000C   0xD5FB             BPL.N    ??Gyro1_0
     24            return ADC1->R[0];
   \   0000000E   0x....             LDR.N    R0,??DataTable2_1  ;; 0x400bb010
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000014   0x4770             BX       LR               ;; return
     25          #else
     26            ADC0->SC1[0] = ADC_SC1_ADCH(8);
     27            while((ADC0->SC1[0]&ADC_SC1_COCO_MASK)==0);
     28            return ADC0->R[0];
     29          #endif
     30          }
     31          

   \                                 In section .text, align 2, keep-with-next
     32          s16 Gyro2(){
     33          #if GYRO_ADCx
     34            ADC1->SC1[0] = ADC_SC1_ADCH(9);
   \                     Gyro2: (+1)
   \   00000000   0x2009             MOVS     R0,#+9
   \   00000002   0x....             LDR.N    R1,??DataTable2  ;; 0x400bb000
   \   00000004   0x6008             STR      R0,[R1, #+0]
     35            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Gyro2_0: (+1)
   \   00000006   0x....             LDR.N    R0,??DataTable2  ;; 0x400bb000
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0600             LSLS     R0,R0,#+24
   \   0000000C   0xD5FB             BPL.N    ??Gyro2_0
     36            return ADC1->R[0];
   \   0000000E   0x....             LDR.N    R0,??DataTable2_1  ;; 0x400bb010
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000014   0x4770             BX       LR               ;; return
     37          #else
     38            ADC0->SC1[0] = ADC_SC1_ADCH(9);
     39            while((ADC0->SC1[0]&ADC_SC1_COCO_MASK)==0);
     40            return ADC0->R[0];
     41          #endif
     42          }
     43          
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void Gyro_Init(){
     46            
     47            if(!ADC1_enabled){
   \                     Gyro_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2_2
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD114             BNE.N    ??Gyro_Init_0
     48              SIM->SCGC3 |= SIM_SCGC3_ADC1_MASK;  //ADC1 Clock Enable
   \   00000008   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40048030
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   00000010   0x....             LDR.N    R1,??DataTable2_3  ;; 0x40048030
   \   00000012   0x6008             STR      R0,[R1, #+0]
     49              ADC1->CFG1 |= 0
     50                         //|ADC_CFG1_ADLPC_MASK
     51                         | ADC_CFG1_ADICLK(1)
     52                         | ADC_CFG1_MODE(1)
     53                         | ADC_CFG1_ADIV(0);
   \   00000014   0x....             LDR.N    R0,??DataTable2_4  ;; 0x400bb008
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0005      ORRS     R0,R0,#0x5
   \   0000001C   0x....             LDR.N    R1,??DataTable2_4  ;; 0x400bb008
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     54              ADC1->CFG2 |= //ADC_CFG2_ADHSC_MASK |
     55                            ADC_CFG2_ADACKEN_MASK;
   \   00000020   0x....             LDR.N    R0,??DataTable2_5  ;; 0x400bb00c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000028   0x....             LDR.N    R1,??DataTable2_5  ;; 0x400bb00c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     56              ADC1_enabled = 1;
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x....             LDR.N    R1,??DataTable2_2
   \   00000030   0x7008             STRB     R0,[R1, #+0]
     57            }
     58          }
   \                     ??Gyro_Init_0: (+1)
   \   00000032   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x400BB010         DC32     0x400bb010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ADC1_enabled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x400BB008         DC32     0x400bb008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x400BB00C         DC32     0x400bb00c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Gyro1
       0   Gyro2
       0   Gyro_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
      22  Gyro1
      22  Gyro2
      52  Gyro_Init
       2  accx
       2  accy
       2  accz
       2  gyro1
       2  gyro2

 
  10 bytes in section .bss
 120 bytes in section .text
 
 120 bytes of CODE memory
  10 bytes of DATA memory

Errors: none
Warnings: none
