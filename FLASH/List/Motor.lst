###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        18/Feb/2016  00:48:07
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\freescale_racing\framework2016\source\Motor.c
#    Command line =  
#        E:\freescale_racing\framework2016\source\Motor.c -lCN
#        E:\freescale_racing\framework2016\FLASH\List\ -lB
#        E:\freescale_racing\framework2016\FLASH\List\ -o
#        E:\freescale_racing\framework2016\FLASH\Obj\ --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\freescale_racing\framework2016\source\ -I
#        E:\freescale_racing\framework2016\common\ -I
#        E:\freescale_racing\framework2016\LPLD\ -I
#        E:\freescale_racing\framework2016\LPLD\HW\ -I
#        E:\freescale_racing\framework2016\LPLD\DEV\ -Ol -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  E:\freescale_racing\framework2016\FLASH\List\Motor.lst
#    Object file  =  E:\freescale_racing\framework2016\FLASH\Obj\Motor.o
#
###############################################################################

E:\freescale_racing\framework2016\source\Motor.c
      1          /*
      2          Arthor : Qian Qiyang (KisaragiAyanoo@twitter)
      3          Date : 2015/12/01
      4          License : MIT
      5          */
      6          
      7          #include "includes.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable15  ;; 0xe000e100
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0x0940             LSRS     R0,R0,#+5
   \   00000010   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     NVIC_SetPriority: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD509             BPL.N    ??NVIC_SetPriority_0
   \   00000006   0x0109             LSLS     R1,R1,#+4
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable15_1  ;; 0xe000ed18
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000012   0x1880             ADDS     R0,R0,R2
   \   00000014   0xF800 0x1C04      STRB     R1,[R0, #-4]
   \   00000018   0xE004             B.N      ??NVIC_SetPriority_1
   \                     ??NVIC_SetPriority_0: (+1)
   \   0000001A   0x0109             LSLS     R1,R1,#+4
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable15_2  ;; 0xe000e400
   \   00000020   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000022   0x5481             STRB     R1,[R0, R2]
   \                     ??NVIC_SetPriority_1: (+1)
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t NVIC_EncodePriority(uint32_t, uint32_t, uint32_t)
   \                     NVIC_EncodePriority: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   00000006   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \   0000000A   0x2B05             CMP      R3,#+5
   \   0000000C   0xD301             BCC.N    ??NVIC_EncodePriority_0
   \   0000000E   0x2304             MOVS     R3,#+4
   \   00000010   0xE001             B.N      ??NVIC_EncodePriority_1
   \                     ??NVIC_EncodePriority_0: (+1)
   \   00000012   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \                     ??NVIC_EncodePriority_1: (+1)
   \   00000016   0x1D04             ADDS     R4,R0,#+4
   \   00000018   0x2C07             CMP      R4,#+7
   \   0000001A   0xD201             BCS.N    ??NVIC_EncodePriority_2
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE000             B.N      ??NVIC_EncodePriority_3
   \                     ??NVIC_EncodePriority_2: (+1)
   \   00000020   0x1EC0             SUBS     R0,R0,#+3
   \                     ??NVIC_EncodePriority_3: (+1)
   \   00000022   0x2401             MOVS     R4,#+1
   \   00000024   0xFA14 0xF303      LSLS     R3,R4,R3
   \   00000028   0x1E5B             SUBS     R3,R3,#+1
   \   0000002A   0x4019             ANDS     R1,R3,R1
   \   0000002C   0x4081             LSLS     R1,R1,R0
   \   0000002E   0x2301             MOVS     R3,#+1
   \   00000030   0xFA13 0xF000      LSLS     R0,R3,R0
   \   00000034   0x1E40             SUBS     R0,R0,#+1
   \   00000036   0x4010             ANDS     R0,R0,R2
   \   00000038   0x4308             ORRS     R0,R0,R1
   \   0000003A   0xBC10             POP      {R4}
   \   0000003C   0x4770             BX       LR               ;; return
      8          
      9          
     10          // ===== Setting =====
     11          #define SERVO_MID 6830 // (g_bus_clock/64*15/10000)  Adjust it according to your mech
     12          
     13          
     14          // ===== Variables =====
     15          
     16          // --- Global ----

   \                                 In section .bss, align 2
     17          S16 tacho0, tacho1;
   \                     tacho0:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     tacho1:
   \   00000000                      DS8 2
     18          
     19          // --- Local ---

   \                                 In section .bss, align 2
     20          U16 tacho1_tmp,tacho0_tmp,ftm1cnt_last;
   \                     tacho1_tmp:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     tacho0_tmp:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     ftm1cnt_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     21          U16 tacho1_last,tacho0_last;
   \                     tacho1_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     tacho0_last:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     22          U8 tacho0_dir;
   \                     tacho0_dir:
   \   00000000                      DS8 1
     23          
     24          
     25          // ===== Local Function Decelaration =====
     26          
     27          u8 Tacho0_Dir();
     28          u8 Tacho1_Dir();
     29          
     30          
     31          // ===== APIs Realization =====
     32          
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void Servo_Output(s16 x){
     35            if(x>400) x = 400;
   \                     Servo_Output: (+1)
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000006   0xDD01             BLE.N    ??Servo_Output_0
   \   00000008   0xF44F 0x70C8      MOV      R0,#+400
     36            if(x<-400) x = -400;
   \                     ??Servo_Output_0: (+1)
   \   0000000C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000E   0xF510 0x7FC8      CMN      R0,#+400
   \   00000012   0xDA01             BGE.N    ??Servo_Output_1
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable15_3  ;; 0xfffffe70
     37            FTM2->CONTROLS[0].CnV=SERVO_MID + x;
   \                     ??Servo_Output_1: (+1)
   \   00000018   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000001A   0xF500 0x50D0      ADD      R0,R0,#+6656
   \   0000001E   0x30AE             ADDS     R0,R0,#+174
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable15_4  ;; 0x400b8010
   \   00000024   0x6008             STR      R0,[R1, #+0]
     38          }
   \   00000026   0x4770             BX       LR               ;; return
     39          

   \                                 In section .text, align 2, keep-with-next
     40          void MotorL_Output(s16 x){
     41            if(x>1000) x=1000;
   \                     MotorL_Output: (+1)
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000006   0xDD01             BLE.N    ??MotorL_Output_0
   \   00000008   0xF44F 0x707A      MOV      R0,#+1000
     42            if(x<-1000) x=-1000;
   \                     ??MotorL_Output_0: (+1)
   \   0000000C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000E   0xF510 0x7F7A      CMN      R0,#+1000
   \   00000012   0xDA01             BGE.N    ??MotorL_Output_1
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable15_5  ;; 0xfffffc18
     43            if(x<0){
   \                     ??MotorL_Output_1: (+1)
   \   00000018   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD509             BPL.N    ??MotorL_Output_2
     44              FTM0->CONTROLS[5].CnV = -x;
   \   0000001E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000020   0x4240             RSBS     R0,R0,#+0
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable15_6  ;; 0x40038038
   \   00000026   0x6008             STR      R0,[R1, #+0]
     45              FTM0->CONTROLS[4].CnV = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable15_7  ;; 0x40038030
   \   0000002E   0x6008             STR      R0,[R1, #+0]
   \   00000030   0xE013             B.N      ??MotorL_Output_3
     46            }
     47            else if(x>0){
   \                     ??MotorL_Output_2: (+1)
   \   00000032   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000034   0x2801             CMP      R0,#+1
   \   00000036   0xDB08             BLT.N    ??MotorL_Output_4
     48              FTM0->CONTROLS[5].CnV = 0;
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x.... 0x....      LDR.W    R2,??DataTable15_6  ;; 0x40038038
   \   0000003E   0x6011             STR      R1,[R2, #+0]
     49              FTM0->CONTROLS[4].CnV = x;
   \   00000040   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable15_7  ;; 0x40038030
   \   00000046   0x6008             STR      R0,[R1, #+0]
   \   00000048   0xE007             B.N      ??MotorL_Output_3
     50            }
     51            else{
     52              FTM0->CONTROLS[4].CnV = 0;
   \                     ??MotorL_Output_4: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable15_7  ;; 0x40038030
   \   00000050   0x6008             STR      R0,[R1, #+0]
     53              FTM0->CONTROLS[5].CnV = 0;
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable15_6  ;; 0x40038038
   \   00000058   0x6008             STR      R0,[R1, #+0]
     54            }
     55          }
   \                     ??MotorL_Output_3: (+1)
   \   0000005A   0x4770             BX       LR               ;; return
     56          

   \                                 In section .text, align 2, keep-with-next
     57          void MotorR_Output(s16 x){
     58            if(x>1000) x=1000;
   \                     MotorR_Output: (+1)
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000006   0xDD01             BLE.N    ??MotorR_Output_0
   \   00000008   0xF44F 0x707A      MOV      R0,#+1000
     59            if(x<-1000) x=-1000;
   \                     ??MotorR_Output_0: (+1)
   \   0000000C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000E   0xF510 0x7F7A      CMN      R0,#+1000
   \   00000012   0xDA01             BGE.N    ??MotorR_Output_1
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable15_5  ;; 0xfffffc18
     60            if(x>0){
   \                     ??MotorR_Output_1: (+1)
   \   00000018   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xDB08             BLT.N    ??MotorR_Output_2
     61              FTM0->CONTROLS[6].CnV = x;
   \   0000001E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable15_8  ;; 0x40038040
   \   00000024   0x6008             STR      R0,[R1, #+0]
     62              FTM0->CONTROLS[7].CnV = 0;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable15_9  ;; 0x40038048
   \   0000002C   0x6008             STR      R0,[R1, #+0]
   \   0000002E   0xE014             B.N      ??MotorR_Output_3
     63            }
     64            else if(x<0){
   \                     ??MotorR_Output_2: (+1)
   \   00000030   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD509             BPL.N    ??MotorR_Output_4
     65              FTM0->CONTROLS[6].CnV = 0;
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x.... 0x....      LDR.W    R2,??DataTable15_8  ;; 0x40038040
   \   0000003C   0x6011             STR      R1,[R2, #+0]
     66              FTM0->CONTROLS[7].CnV = -x;
   \   0000003E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000040   0x4240             RSBS     R0,R0,#+0
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable15_9  ;; 0x40038048
   \   00000046   0x6008             STR      R0,[R1, #+0]
   \   00000048   0xE007             B.N      ??MotorR_Output_3
     67            }
     68            else{
     69              FTM0->CONTROLS[6].CnV = 0;
   \                     ??MotorR_Output_4: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable15_8  ;; 0x40038040
   \   00000050   0x6008             STR      R0,[R1, #+0]
     70              FTM0->CONTROLS[7].CnV = 0;
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable15_9  ;; 0x40038048
   \   00000058   0x6008             STR      R0,[R1, #+0]
     71            }
     72          }
   \                     ??MotorR_Output_3: (+1)
   \   0000005A   0x4770             BX       LR               ;; return
     73          

   \                                 In section .text, align 2, keep-with-next
     74          void MotorL_Enable(u8 x){
     75            if(x)
   \                     MotorL_Enable: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD008             BEQ.N    ??MotorL_Enable_0
     76              PTD->PSOR |= 1<<2;
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable15_10  ;; 0x400ff0c4
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable15_10  ;; 0x400ff0c4
   \   00000014   0x6008             STR      R0,[R1, #+0]
   \   00000016   0xE007             B.N      ??MotorL_Enable_1
     77            else
     78              PTD->PCOR |= 1<<2;
   \                     ??MotorL_Enable_0: (+1)
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable15_11  ;; 0x400ff0c8
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable15_11  ;; 0x400ff0c8
   \   00000026   0x6008             STR      R0,[R1, #+0]
     79          }
   \                     ??MotorL_Enable_1: (+1)
   \   00000028   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     80          void MotorR_Enable(u8 x){
     81            if(x)
   \                     MotorR_Enable: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD008             BEQ.N    ??MotorR_Enable_0
     82              PTD->PSOR |= 1<<3;
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable15_10  ;; 0x400ff0c4
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable15_10  ;; 0x400ff0c4
   \   00000014   0x6008             STR      R0,[R1, #+0]
   \   00000016   0xE007             B.N      ??MotorR_Enable_1
     83            else
     84              PTD->PCOR |= 1<<3;
   \                     ??MotorR_Enable_0: (+1)
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable15_11  ;; 0x400ff0c8
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable15_11  ;; 0x400ff0c8
   \   00000026   0x6008             STR      R0,[R1, #+0]
     85          }
   \                     ??MotorR_Enable_1: (+1)
   \   00000028   0x4770             BX       LR               ;; return
     86          
     87          // ------- Tacho -----
     88          

   \                                 In section .text, align 2, keep-with-next
     89          void Tacho0_Get(){
   \                     Tacho0_Get: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     90            u16 tmp = Tacho0_Renew();
   \   00000002   0x.... 0x....      BL       Tacho0_Renew
     91            tacho0 = tmp - tacho0_last;
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable15_12
   \   0000000A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000000E   0x1A41             SUBS     R1,R0,R1
   \   00000010   0x.... 0x....      LDR.W    R2,??DataTable15_13
   \   00000014   0x8011             STRH     R1,[R2, #+0]
     92            tacho0_last = tmp;
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable15_12
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
     93          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
     94          

   \                                 In section .text, align 2, keep-with-next
     95          u16 Tacho0_Renew(){
     96            if(tacho0_dir){
   \                     Tacho0_Renew: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable15_14
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD014             BEQ.N    ??Tacho0_Renew_0
     97              tacho0_tmp -= FTM1->CNT-ftm1cnt_last;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable15_15  ;; 0x40039004
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable15_16
   \   00000014   0x8809             LDRH     R1,[R1, #+0]
   \   00000016   0x.... 0x....      LDR.W    R2,??DataTable15_17
   \   0000001A   0x8812             LDRH     R2,[R2, #+0]
   \   0000001C   0x1A10             SUBS     R0,R2,R0
   \   0000001E   0x1808             ADDS     R0,R1,R0
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable15_17
   \   00000024   0x8008             STRH     R0,[R1, #+0]
     98              ftm1cnt_last = FTM1->CNT;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable15_15  ;; 0x40039004
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable15_16
   \   00000030   0x8008             STRH     R0,[R1, #+0]
   \   00000032   0xE013             B.N      ??Tacho0_Renew_1
     99            }
    100            else{
    101              tacho0_tmp += FTM1->CNT-ftm1cnt_last;
   \                     ??Tacho0_Renew_0: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable15_15  ;; 0x40039004
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable15_16
   \   0000003E   0x8809             LDRH     R1,[R1, #+0]
   \   00000040   0x.... 0x....      LDR.W    R2,??DataTable15_17
   \   00000044   0x8812             LDRH     R2,[R2, #+0]
   \   00000046   0x1880             ADDS     R0,R0,R2
   \   00000048   0x1A40             SUBS     R0,R0,R1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable15_17
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
    102              ftm1cnt_last = FTM1->CNT;
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable15_15  ;; 0x40039004
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable15_16
   \   0000005A   0x8008             STRH     R0,[R1, #+0]
    103            }
    104            return tacho0_tmp;
   \                     ??Tacho0_Renew_1: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable15_17
   \   00000060   0x8800             LDRH     R0,[R0, #+0]
   \   00000062   0x4770             BX       LR               ;; return
    105          }
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void Tacho1_Get(){
    108            u16 tmp = tacho1_tmp;
   \                     Tacho1_Get: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable15_18
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
    109            tacho1 = tmp - tacho1_last;
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable15_19
   \   0000000A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000000E   0x1A41             SUBS     R1,R0,R1
   \   00000010   0x.... 0x....      LDR.W    R2,??DataTable15_20
   \   00000014   0x8011             STRH     R1,[R2, #+0]
    110            tacho1_last = tmp;
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable15_19
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
    111          }
   \   0000001C   0x4770             BX       LR               ;; return
    112          
    113          
    114          
    115          // --- INIT ---
    116          

   \                                 In section .text, align 2, keep-with-next
    117          void Motor_Init(){
   \                     Motor_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    118            
    119            // Motor FTM 
    120            SIM->SCGC6|=SIM_SCGC6_FTM0_MASK;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable15_21  ;; 0x4004803c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000000C   0x....             LDR.N    R1,??DataTable15_21  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    121            FTM0->SC|=FTM_SC_CLKS(1)|FTM_SC_PS(0);//PS16,System Clock
   \   00000010   0x....             LDR.N    R0,??DataTable15_22  ;; 0x40038000
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000018   0x....             LDR.N    R1,??DataTable15_22  ;; 0x40038000
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    122            FTM0->MOD=1000;//Max Value
   \   0000001C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000020   0x....             LDR.N    R1,??DataTable15_23  ;; 0x40038008
   \   00000022   0x6008             STR      R0,[R1, #+0]
    123            FTM0->CONTROLS[4].CnSC|=FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   00000024   0x....             LDR.N    R0,??DataTable15_24  ;; 0x4003802c
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF050 0x0028      ORRS     R0,R0,#0x28
   \   0000002C   0x....             LDR.N    R1,??DataTable15_24  ;; 0x4003802c
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    124            FTM0->CONTROLS[5].CnSC|=FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   00000030   0x....             LDR.N    R0,??DataTable15_25  ;; 0x40038034
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF050 0x0028      ORRS     R0,R0,#0x28
   \   00000038   0x....             LDR.N    R1,??DataTable15_25  ;; 0x40038034
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    125            FTM0->CONTROLS[6].CnSC|=FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   0000003C   0x....             LDR.N    R0,??DataTable15_26  ;; 0x4003803c
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF050 0x0028      ORRS     R0,R0,#0x28
   \   00000044   0x....             LDR.N    R1,??DataTable15_26  ;; 0x4003803c
   \   00000046   0x6008             STR      R0,[R1, #+0]
    126            FTM0->CONTROLS[7].CnSC|=FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   00000048   0x....             LDR.N    R0,??DataTable15_27  ;; 0x40038044
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF050 0x0028      ORRS     R0,R0,#0x28
   \   00000050   0x....             LDR.N    R1,??DataTable15_27  ;; 0x40038044
   \   00000052   0x6008             STR      R0,[R1, #+0]
    127            FTM0->CONTROLS[4].CnV=0;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x....             LDR.N    R1,??DataTable15_7  ;; 0x40038030
   \   00000058   0x6008             STR      R0,[R1, #+0]
    128            FTM0->CONTROLS[5].CnV=0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x....             LDR.N    R1,??DataTable15_6  ;; 0x40038038
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    129            FTM0->CONTROLS[6].CnV=0;
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x....             LDR.N    R1,??DataTable15_8  ;; 0x40038040
   \   00000064   0x6008             STR      R0,[R1, #+0]
    130            FTM0->CONTROLS[7].CnV=0;
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x....             LDR.N    R1,??DataTable15_9  ;; 0x40038048
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    131            FTM0->POL = 0xff;
   \   0000006C   0x20FF             MOVS     R0,#+255
   \   0000006E   0x....             LDR.N    R1,??DataTable15_28  ;; 0x40038070
   \   00000070   0x6008             STR      R0,[R1, #+0]
    132            
    133            PORTD->PCR[4]|=PORT_PCR_MUX(4);
   \   00000072   0x....             LDR.N    R0,??DataTable15_29  ;; 0x4004c010
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   0000007A   0x....             LDR.N    R1,??DataTable15_29  ;; 0x4004c010
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    134            PORTD->PCR[5]|=PORT_PCR_MUX(4);
   \   0000007E   0x....             LDR.N    R0,??DataTable15_30  ;; 0x4004c014
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000086   0x....             LDR.N    R1,??DataTable15_30  ;; 0x4004c014
   \   00000088   0x6008             STR      R0,[R1, #+0]
    135            PORTD->PCR[6]|=PORT_PCR_MUX(4);
   \   0000008A   0x....             LDR.N    R0,??DataTable15_31  ;; 0x4004c018
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000092   0x....             LDR.N    R1,??DataTable15_31  ;; 0x4004c018
   \   00000094   0x6008             STR      R0,[R1, #+0]
    136            PORTD->PCR[7]|=PORT_PCR_MUX(4);
   \   00000096   0x....             LDR.N    R0,??DataTable15_32  ;; 0x4004c01c
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   0000009E   0x....             LDR.N    R1,??DataTable15_32  ;; 0x4004c01c
   \   000000A0   0x6008             STR      R0,[R1, #+0]
    137            
    138            // Motor enable
    139            PORTD->PCR[2] |= PORT_PCR_MUX(1);
   \   000000A2   0x....             LDR.N    R0,??DataTable15_33  ;; 0x4004c008
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000AA   0x....             LDR.N    R1,??DataTable15_33  ;; 0x4004c008
   \   000000AC   0x6008             STR      R0,[R1, #+0]
    140            PORTD->PCR[3] |= PORT_PCR_MUX(1);
   \   000000AE   0x....             LDR.N    R0,??DataTable15_34  ;; 0x4004c00c
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000B6   0x....             LDR.N    R1,??DataTable15_34  ;; 0x4004c00c
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    141            PTD->PDDR |= (3<<2);
   \   000000BA   0x....             LDR.N    R0,??DataTable15_35  ;; 0x400ff0d4
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0xF050 0x000C      ORRS     R0,R0,#0xC
   \   000000C2   0x....             LDR.N    R1,??DataTable15_35  ;; 0x400ff0d4
   \   000000C4   0x6008             STR      R0,[R1, #+0]
    142            PTD->PDOR |= (3<<2);
   \   000000C6   0x....             LDR.N    R0,??DataTable15_36  ;; 0x400ff0c0
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0xF050 0x000C      ORRS     R0,R0,#0xC
   \   000000CE   0x....             LDR.N    R1,??DataTable15_36  ;; 0x400ff0c0
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    143            
    144            
    145            // enable
    146            MotorL_Enable(1);
   \   000000D2   0x2001             MOVS     R0,#+1
   \   000000D4   0x.... 0x....      BL       MotorL_Enable
    147            MotorR_Enable(1);
   \   000000D8   0x2001             MOVS     R0,#+1
   \   000000DA   0x.... 0x....      BL       MotorR_Enable
    148          }
   \   000000DE   0xBD01             POP      {R0,PC}          ;; return
    149          

   \                                 In section .text, align 2, keep-with-next
    150          void Tacho_Init(){
   \                     Tacho_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    151            SIM->SCGC6 |= SIM_SCGC6_FTM1_MASK;
   \   00000002   0x....             LDR.N    R0,??DataTable15_21  ;; 0x4004803c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000000A   0x....             LDR.N    R1,??DataTable15_21  ;; 0x4004803c
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    152            /* // Input Cap
    153            FTM1->SC|=FTM_SC_CLKS(1)|FTM_SC_PS(7);//PS16,System Clock /128
    154            FTM1->SC &= (~FTM_SC_CPWMS_MASK);
    155            FTM1->CONTROLS[0].CnSC=1<<2;
    156            FTM1->CONTROLS[1].CnSC=1<<2;
    157            PORTA->PCR[12] |= PORT_PCR_MUX(3);
    158            PORTA->PCR[13] |= PORT_PCR_MUX(3);
    159            */
    160            
    161            // QD for phase0
    162            PORTA->PCR[12]|=PORT_PCR_MUX(7);
   \   0000000E   0x....             LDR.N    R0,??DataTable15_37  ;; 0x40049030
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF450 0x60E0      ORRS     R0,R0,#0x700
   \   00000016   0x....             LDR.N    R1,??DataTable15_37  ;; 0x40049030
   \   00000018   0x6008             STR      R0,[R1, #+0]
    163            FTM1->MODE|=FTM_MODE_WPDIS_MASK;//Write protection disable
   \   0000001A   0x....             LDR.N    R0,??DataTable15_38  ;; 0x40039054
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000022   0x....             LDR.N    R1,??DataTable15_38  ;; 0x40039054
   \   00000024   0x6008             STR      R0,[R1, #+0]
    164            FTM1->QDCTRL|=FTM_QDCTRL_QUADMODE_MASK;
   \   00000026   0x....             LDR.N    R0,??DataTable15_39  ;; 0x40039080
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000002E   0x....             LDR.N    R1,??DataTable15_39  ;; 0x40039080
   \   00000030   0x6008             STR      R0,[R1, #+0]
    165            FTM1->CNTIN=0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x....             LDR.N    R1,??DataTable15_40  ;; 0x4003904c
   \   00000036   0x6008             STR      R0,[R1, #+0]
    166            FTM1->MOD=0XFFFF;
   \   00000038   0xF64F 0x70FF      MOVW     R0,#+65535
   \   0000003C   0x....             LDR.N    R1,??DataTable15_41  ;; 0x40039008
   \   0000003E   0x6008             STR      R0,[R1, #+0]
    167            FTM1->QDCTRL|=FTM_QDCTRL_QUADEN_MASK;
   \   00000040   0x....             LDR.N    R0,??DataTable15_39  ;; 0x40039080
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000048   0x....             LDR.N    R1,??DataTable15_39  ;; 0x40039080
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    168            FTM1->MODE|=FTM_MODE_FTMEN_MASK;//let all registers available for use
   \   0000004C   0x....             LDR.N    R0,??DataTable15_38  ;; 0x40039054
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000054   0x....             LDR.N    R1,??DataTable15_38  ;; 0x40039054
   \   00000056   0x6008             STR      R0,[R1, #+0]
    169            FTM1->CNT=0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x....             LDR.N    R1,??DataTable15_15  ;; 0x40039004
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    170            
    171            // IO interrupt for phase1
    172            PORTA->PCR[13]|=PORT_PCR_MUX(1);
   \   0000005E   0x....             LDR.N    R0,??DataTable15_42  ;; 0x40049034
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000066   0x....             LDR.N    R1,??DataTable15_42  ;; 0x40049034
   \   00000068   0x6008             STR      R0,[R1, #+0]
    173            PTA->PDDR &=~(1<<13);
   \   0000006A   0x....             LDR.N    R0,??DataTable15_43  ;; 0x400ff014
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF430 0x5000      BICS     R0,R0,#0x2000
   \   00000072   0x....             LDR.N    R1,??DataTable15_43  ;; 0x400ff014
   \   00000074   0x6008             STR      R0,[R1, #+0]
    174            PORTA->PCR[13] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK | PORT_PCR_IRQC(10);	//PULLUP | falling edge
   \   00000076   0x....             LDR.N    R0,??DataTable15_42  ;; 0x40049034
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF440 0x2020      ORR      R0,R0,#0xA0000
   \   0000007E   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   00000082   0x....             LDR.N    R1,??DataTable15_42  ;; 0x40049034
   \   00000084   0x6008             STR      R0,[R1, #+0]
    175            NVIC_EnableIRQ(PORTA_IRQn);
   \   00000086   0x2057             MOVS     R0,#+87
   \   00000088   0x.... 0x....      BL       NVIC_EnableIRQ
    176            NVIC_SetPriority(PORTA_IRQn, NVIC_EncodePriority(NVIC_GROUP, 0, 2));
   \   0000008C   0x2202             MOVS     R2,#+2
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x2005             MOVS     R0,#+5
   \   00000092   0x.... 0x....      BL       NVIC_EncodePriority
   \   00000096   0x0001             MOVS     R1,R0
   \   00000098   0x2057             MOVS     R0,#+87
   \   0000009A   0x.... 0x....      BL       NVIC_SetPriority
    177            
    178            //==== Tacho DIR ===
    179            PORTA->PCR[14] |= PORT_PCR_MUX(1);
   \   0000009E   0x....             LDR.N    R0,??DataTable15_44  ;; 0x40049038
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000A6   0x....             LDR.N    R1,??DataTable15_44  ;; 0x40049038
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    180            PORTA->PCR[15] |= PORT_PCR_MUX(1);
   \   000000AA   0x....             LDR.N    R0,??DataTable15_45  ;; 0x4004903c
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000B2   0x....             LDR.N    R1,??DataTable15_45  ;; 0x4004903c
   \   000000B4   0x6008             STR      R0,[R1, #+0]
    181            PTA->PDDR &=~(3<<14);
   \   000000B6   0x....             LDR.N    R0,??DataTable15_43  ;; 0x400ff014
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF430 0x4040      BICS     R0,R0,#0xC000
   \   000000BE   0x....             LDR.N    R1,??DataTable15_43  ;; 0x400ff014
   \   000000C0   0x6008             STR      R0,[R1, #+0]
    182            PORTA->PCR[14] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK | PORT_PCR_IRQC(11);	//PULLUP | either edge
   \   000000C2   0x....             LDR.N    R0,??DataTable15_44  ;; 0x40049038
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0xF440 0x2030      ORR      R0,R0,#0xB0000
   \   000000CA   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   000000CE   0x....             LDR.N    R1,??DataTable15_44  ;; 0x40049038
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    183            PORTA->PCR[15] |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ;
   \   000000D2   0x....             LDR.N    R0,??DataTable15_45  ;; 0x4004903c
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   000000DA   0x....             LDR.N    R1,??DataTable15_45  ;; 0x4004903c
   \   000000DC   0x6008             STR      R0,[R1, #+0]
    184            
    185            tacho0_dir = Tacho0_Dir();
   \   000000DE   0x.... 0x....      BL       Tacho0_Dir
   \   000000E2   0x....             LDR.N    R1,??DataTable15_14
   \   000000E4   0x7008             STRB     R0,[R1, #+0]
    186            
    187            /*
    188            SIM->SCGC5|=SIM_SCGC5_LPTIMER_MASK;
    189            PORTC->PCR[5] = PORT_PCR_MUX(4);
    190            //PORTA->PCR[19] = PORT_PCR_MUX(6);
    191            LPTMR0->PSR = LPTMR_PSR_PCS(0x1)|LPTMR_PSR_PBYP_MASK; 
    192            LPTMR0->CSR = LPTMR_CSR_TPS(2);
    193            LPTMR0->CSR = LPTMR_CSR_TMS_MASK;
    194            LPTMR0->CSR |= LPTMR_CSR_TFC_MASK;
    195            
    196            LPTMR0->CSR |= LPTMR_CSR_TEN_MASK;*/
    197          }
   \   000000E6   0xBD01             POP      {R0,PC}          ;; return
    198          

   \                                 In section .text, align 2, keep-with-next
    199          void Servo_Init(){
    200            SIM->SCGC3|=SIM_SCGC3_FTM2_MASK;
   \                     Servo_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable15_46  ;; 0x40048030
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000008   0x....             LDR.N    R1,??DataTable15_46  ;; 0x40048030
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    201            FTM2->SC|=FTM_SC_CLKS(1)|FTM_SC_PS(6);//PS16,System Clock /64
   \   0000000C   0x....             LDR.N    R0,??DataTable15_47  ;; 0x400b8000
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF050 0x000E      ORRS     R0,R0,#0xE
   \   00000014   0x....             LDR.N    R1,??DataTable15_47  ;; 0x400b8000
   \   00000016   0x6008             STR      R0,[R1, #+0]
    202            FTM2->MOD=8000;//Max Value
   \   00000018   0xF44F 0x50FA      MOV      R0,#+8000
   \   0000001C   0x....             LDR.N    R1,??DataTable15_48  ;; 0x400b8008
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    203            FTM2->CONTROLS[0].CnSC|=FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \   00000020   0x....             LDR.N    R0,??DataTable15_49  ;; 0x400b800c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x0028      ORRS     R0,R0,#0x28
   \   00000028   0x....             LDR.N    R1,??DataTable15_49  ;; 0x400b800c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    204            FTM2->CONTROLS[0].CnV=SERVO_MID;
   \   0000002C   0xF641 0x20AE      MOVW     R0,#+6830
   \   00000030   0x....             LDR.N    R1,??DataTable15_4  ;; 0x400b8010
   \   00000032   0x6008             STR      R0,[R1, #+0]
    205            FTM2->POL = 0xff;
   \   00000034   0x20FF             MOVS     R0,#+255
   \   00000036   0x....             LDR.N    R1,??DataTable15_50  ;; 0x400b8070
   \   00000038   0x6008             STR      R0,[R1, #+0]
    206            PORTB->PCR[18]|=PORT_PCR_MUX(3);
   \   0000003A   0x....             LDR.N    R0,??DataTable15_51  ;; 0x4004a048
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF450 0x7040      ORRS     R0,R0,#0x300
   \   00000042   0x....             LDR.N    R1,??DataTable15_51  ;; 0x4004a048
   \   00000044   0x6008             STR      R0,[R1, #+0]
    207          }
   \   00000046   0x4770             BX       LR               ;; return
    208          
    209          
    210          
    211          
    212          
    213          // ======== Basic Drivers ========
    214          
    215          //---- Tacho dir ----

   \                                 In section .text, align 2, keep-with-next
    216          u8 Tacho0_Dir(void){
    217            return (PTA->PDIR>>14)&1;
   \                     Tacho0_Dir: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable15_52  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0B80             LSRS     R0,R0,#+14
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return
    218          }

   \                                 In section .text, align 2, keep-with-next
    219          u8 Tacho1_Dir(void){
    220            return (PTA->PDIR>>15)&1;
   \                     Tacho1_Dir: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable15_52  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0BC0             LSRS     R0,R0,#+15
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return
    221          }
    222          
    223          

   \                                 In section .text, align 2, keep-with-next
    224          void PORTA_IRQHandler(){
   \                     PORTA_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    225            if((PORTA->ISFR)&PORT_ISFR_ISF(1 << 13)){     // phase 1 
   \   00000002   0x....             LDR.N    R0,??DataTable15_53  ;; 0x400490a0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0480             LSLS     R0,R0,#+18
   \   00000008   0xD515             BPL.N    ??PORTA_IRQHandler_0
    226              PORTA->ISFR |= PORT_ISFR_ISF(1 << 13);
   \   0000000A   0x....             LDR.N    R0,??DataTable15_53  ;; 0x400490a0
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF450 0x5000      ORRS     R0,R0,#0x2000
   \   00000012   0x....             LDR.N    R1,??DataTable15_53  ;; 0x400490a0
   \   00000014   0x6008             STR      R0,[R1, #+0]
    227              if(Tacho1_Dir())
   \   00000016   0x.... 0x....      BL       Tacho1_Dir
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD005             BEQ.N    ??PORTA_IRQHandler_1
    228                tacho1_tmp ++;
   \   0000001E   0x....             LDR.N    R0,??DataTable15_18
   \   00000020   0x8800             LDRH     R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x....             LDR.N    R1,??DataTable15_18
   \   00000026   0x8008             STRH     R0,[R1, #+0]
   \   00000028   0xE036             B.N      ??PORTA_IRQHandler_2
    229              else
    230                tacho1_tmp --;
   \                     ??PORTA_IRQHandler_1: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable15_18
   \   0000002C   0x8800             LDRH     R0,[R0, #+0]
   \   0000002E   0x1E40             SUBS     R0,R0,#+1
   \   00000030   0x....             LDR.N    R1,??DataTable15_18
   \   00000032   0x8008             STRH     R0,[R1, #+0]
   \   00000034   0xE030             B.N      ??PORTA_IRQHandler_2
    231            }
    232            else if((PORTA->ISFR)&PORT_ISFR_ISF(1 << 14)){     // phase 0 dir 
   \                     ??PORTA_IRQHandler_0: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable15_53  ;; 0x400490a0
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x0440             LSLS     R0,R0,#+17
   \   0000003C   0xD52C             BPL.N    ??PORTA_IRQHandler_2
    233              PORTA->ISFR |= PORT_ISFR_ISF(1 << 14);
   \   0000003E   0x....             LDR.N    R0,??DataTable15_53  ;; 0x400490a0
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   00000046   0x....             LDR.N    R1,??DataTable15_53  ;; 0x400490a0
   \   00000048   0x6008             STR      R0,[R1, #+0]
    234              if(Tacho0_Dir()){
   \   0000004A   0x.... 0x....      BL       Tacho0_Dir
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD011             BEQ.N    ??PORTA_IRQHandler_3
    235                tacho0_dir = 1;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x....             LDR.N    R1,??DataTable15_14
   \   00000056   0x7008             STRB     R0,[R1, #+0]
    236                tacho0_tmp += FTM1->CNT-ftm1cnt_last;
   \   00000058   0x....             LDR.N    R0,??DataTable15_15  ;; 0x40039004
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0x....             LDR.N    R1,??DataTable15_16
   \   0000005E   0x8809             LDRH     R1,[R1, #+0]
   \   00000060   0x....             LDR.N    R2,??DataTable15_17
   \   00000062   0x8812             LDRH     R2,[R2, #+0]
   \   00000064   0x1880             ADDS     R0,R0,R2
   \   00000066   0x1A40             SUBS     R0,R0,R1
   \   00000068   0x....             LDR.N    R1,??DataTable15_17
   \   0000006A   0x8008             STRH     R0,[R1, #+0]
    237                ftm1cnt_last = FTM1->CNT;
   \   0000006C   0x....             LDR.N    R0,??DataTable15_15  ;; 0x40039004
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x....             LDR.N    R1,??DataTable15_16
   \   00000072   0x8008             STRH     R0,[R1, #+0]
   \   00000074   0xE010             B.N      ??PORTA_IRQHandler_2
    238              }
    239              else{       //  falling
    240                tacho0_dir = 0;
   \                     ??PORTA_IRQHandler_3: (+1)
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x....             LDR.N    R1,??DataTable15_14
   \   0000007A   0x7008             STRB     R0,[R1, #+0]
    241                tacho0_tmp -= FTM1->CNT-ftm1cnt_last;
   \   0000007C   0x....             LDR.N    R0,??DataTable15_15  ;; 0x40039004
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0x....             LDR.N    R1,??DataTable15_16
   \   00000082   0x8809             LDRH     R1,[R1, #+0]
   \   00000084   0x....             LDR.N    R2,??DataTable15_17
   \   00000086   0x8812             LDRH     R2,[R2, #+0]
   \   00000088   0x1A10             SUBS     R0,R2,R0
   \   0000008A   0x1808             ADDS     R0,R1,R0
   \   0000008C   0x....             LDR.N    R1,??DataTable15_17
   \   0000008E   0x8008             STRH     R0,[R1, #+0]
    242                ftm1cnt_last = FTM1->CNT;
   \   00000090   0x....             LDR.N    R0,??DataTable15_15  ;; 0x40039004
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x....             LDR.N    R1,??DataTable15_16
   \   00000096   0x8008             STRH     R0,[R1, #+0]
    243              }
    244            }
    245          }
   \                     ??PORTA_IRQHandler_2: (+1)
   \   00000098   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \   00000000   0xFFFFFE70         DC32     0xfffffe70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \   00000000   0x400B8010         DC32     0x400b8010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \   00000000   0xFFFFFC18         DC32     0xfffffc18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \   00000000   0x40038038         DC32     0x40038038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_7:
   \   00000000   0x40038030         DC32     0x40038030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_8:
   \   00000000   0x40038040         DC32     0x40038040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_9:
   \   00000000   0x40038048         DC32     0x40038048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_10:
   \   00000000   0x400FF0C4         DC32     0x400ff0c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_11:
   \   00000000   0x400FF0C8         DC32     0x400ff0c8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_12:
   \   00000000   0x........         DC32     tacho0_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_13:
   \   00000000   0x........         DC32     tacho0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_14:
   \   00000000   0x........         DC32     tacho0_dir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_15:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_16:
   \   00000000   0x........         DC32     ftm1cnt_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_17:
   \   00000000   0x........         DC32     tacho0_tmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_18:
   \   00000000   0x........         DC32     tacho1_tmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_19:
   \   00000000   0x........         DC32     tacho1_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_20:
   \   00000000   0x........         DC32     tacho1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_21:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_22:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_23:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_24:
   \   00000000   0x4003802C         DC32     0x4003802c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_25:
   \   00000000   0x40038034         DC32     0x40038034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_26:
   \   00000000   0x4003803C         DC32     0x4003803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_27:
   \   00000000   0x40038044         DC32     0x40038044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_28:
   \   00000000   0x40038070         DC32     0x40038070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_29:
   \   00000000   0x4004C010         DC32     0x4004c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_30:
   \   00000000   0x4004C014         DC32     0x4004c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_31:
   \   00000000   0x4004C018         DC32     0x4004c018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_32:
   \   00000000   0x4004C01C         DC32     0x4004c01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_33:
   \   00000000   0x4004C008         DC32     0x4004c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_34:
   \   00000000   0x4004C00C         DC32     0x4004c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_35:
   \   00000000   0x400FF0D4         DC32     0x400ff0d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_36:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_37:
   \   00000000   0x40049030         DC32     0x40049030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_38:
   \   00000000   0x40039054         DC32     0x40039054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_39:
   \   00000000   0x40039080         DC32     0x40039080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_40:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_41:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_42:
   \   00000000   0x40049034         DC32     0x40049034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_43:
   \   00000000   0x400FF014         DC32     0x400ff014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_44:
   \   00000000   0x40049038         DC32     0x40049038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_45:
   \   00000000   0x4004903C         DC32     0x4004903c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_46:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_47:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_48:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_49:
   \   00000000   0x400B800C         DC32     0x400b800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_50:
   \   00000000   0x400B8070         DC32     0x400b8070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_51:
   \   00000000   0x4004A048         DC32     0x4004a048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_52:
   \   00000000   0x400FF010         DC32     0x400ff010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_53:
   \   00000000   0x400490A0         DC32     0x400490a0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   MotorL_Enable
       0   MotorL_Output
       0   MotorR_Enable
       0   MotorR_Output
       8   Motor_Init
         8   -> MotorL_Enable
         8   -> MotorR_Enable
       0   NVIC_EnableIRQ
       4   NVIC_EncodePriority
       0   NVIC_SetPriority
       8   PORTA_IRQHandler
         8   -> Tacho0_Dir
         8   -> Tacho1_Dir
       0   Servo_Init
       0   Servo_Output
       0   Tacho0_Dir
       8   Tacho0_Get
         8   -> Tacho0_Renew
       0   Tacho0_Renew
       0   Tacho1_Dir
       0   Tacho1_Get
       8   Tacho_Init
         8   -> NVIC_EnableIRQ
         8   -> NVIC_EncodePriority
         8   -> NVIC_SetPriority
         8   -> Tacho0_Dir


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_10
       4  ??DataTable15_11
       4  ??DataTable15_12
       4  ??DataTable15_13
       4  ??DataTable15_14
       4  ??DataTable15_15
       4  ??DataTable15_16
       4  ??DataTable15_17
       4  ??DataTable15_18
       4  ??DataTable15_19
       4  ??DataTable15_2
       4  ??DataTable15_20
       4  ??DataTable15_21
       4  ??DataTable15_22
       4  ??DataTable15_23
       4  ??DataTable15_24
       4  ??DataTable15_25
       4  ??DataTable15_26
       4  ??DataTable15_27
       4  ??DataTable15_28
       4  ??DataTable15_29
       4  ??DataTable15_3
       4  ??DataTable15_30
       4  ??DataTable15_31
       4  ??DataTable15_32
       4  ??DataTable15_33
       4  ??DataTable15_34
       4  ??DataTable15_35
       4  ??DataTable15_36
       4  ??DataTable15_37
       4  ??DataTable15_38
       4  ??DataTable15_39
       4  ??DataTable15_4
       4  ??DataTable15_40
       4  ??DataTable15_41
       4  ??DataTable15_42
       4  ??DataTable15_43
       4  ??DataTable15_44
       4  ??DataTable15_45
       4  ??DataTable15_46
       4  ??DataTable15_47
       4  ??DataTable15_48
       4  ??DataTable15_49
       4  ??DataTable15_5
       4  ??DataTable15_50
       4  ??DataTable15_51
       4  ??DataTable15_52
       4  ??DataTable15_53
       4  ??DataTable15_6
       4  ??DataTable15_7
       4  ??DataTable15_8
       4  ??DataTable15_9
      42  MotorL_Enable
      92  MotorL_Output
      42  MotorR_Enable
      92  MotorR_Output
     224  Motor_Init
      22  NVIC_EnableIRQ
      62  NVIC_EncodePriority
      38  NVIC_SetPriority
     154  PORTA_IRQHandler
      72  Servo_Init
      40  Servo_Output
      12  Tacho0_Dir
      30  Tacho0_Get
     100  Tacho0_Renew
      12  Tacho1_Dir
      30  Tacho1_Get
     232  Tacho_Init
       2  ftm1cnt_last
       2  tacho0
       1  tacho0_dir
       2  tacho0_last
       2  tacho0_tmp
       2  tacho1
       2  tacho1_last
       2  tacho1_tmp

 
    15 bytes in section .bss
 1 512 bytes in section .text
 
 1 512 bytes of CODE memory
    15 bytes of DATA memory

Errors: none
Warnings: 4
